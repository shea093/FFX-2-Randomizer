import copy

import dressphere_randomize
from dressphere_randomize import seed
import os
import random
import hashlib
from treasure import Treasure
from enemy import Enemy
from dressphere_randomize import resource_path
import binascii
import regex as re
import pathlib
from command import Command
from services import *
import monster_edit




test = ""
btl_path_name = "btl"
btl_bin_path_name = "BTLBINS"
newjp_btl_path_name = "NEWJPBTL"
treasure_path_name = "Test Files/takara.bin"
seed_name = copy.deepcopy(seed)

for monmag in dressphere_randomize.mon_magic_abilities:
    if monmag.name=="Glint":
        a = dressphere_randomize.mon_magic_abilities
        test


class Seed:
    def __init__(self, seed_input: int):
        self.seedy = seed_input

    def call_seed(self) -> int:
        a = hash(self.seedy+248)
        increment = random.Random(a).randint(1,10000)
        self.seedy = int((self.seedy + increment))
        test
        return self.seedy

    def roll_100(self) -> int:
        roll = random.Random(self.call_seed()).randint(1,101)
        return roll

    def __repr__(self):
        return str(self.seedy)

'''
More paths
'''
global_seed = Seed(hash(seed_name))
plate_bin_path = resource_path(pathlib.PureWindowsPath("Test Files\plate.bin"))
btl_path = resource_path(pathlib.PureWindowsPath(btl_path_name))
btl_bin_path = resource_path(pathlib.PureWindowsPath(btl_bin_path_name))
new_jp_btl_path = resource_path(pathlib.PureWindowsPath(newjp_btl_path_name))
treasure_bin_path = resource_path(pathlib.PureWindowsPath(treasure_path_name))

'''
Binary Data
'''
garment_grid_hex = read_hex(pathlib.Path(plate_bin_path))
treasure_bin_hex = read_hex(pathlib.Path(treasure_bin_path))

'''
INITIAL LISTS / DICTS
'''

dresspheres = dressphere_randomize.dresspheres_initial
command_file_byte_dict = dressphere_randomize.file_byte_info_dict
global_abilities = dressphere_randomize.global_ability_initial[0:command_file_byte_dict['NUMBER_OF_ABILITIES']+1]
global_auto_abilities = dressphere_randomize.global_ability_initial[command_file_byte_dict['NUMBER_OF_ABILITIES']+1:len(dressphere_randomize.global_ability_initial)]
heading_chunk = dressphere_randomize.get_big_chunks(get_all_segments=True,segment_type="command")[0]
footer_chunk = dressphere_randomize.get_big_chunks(get_all_segments=True,segment_type="command")[-1]
updated_command_file_byte_dict = copy.deepcopy(command_file_byte_dict)

monsters = dressphere_randomize.global_monsters

valid_enemies = []
valid_enemy_hex_ids = []
more_bads = ["Seymour'sWeapon"]
for enemy in monster_edit.enemies:
    if (enemy.enemy_id not in monster_edit.normal_error_ids) and (enemy.enemy_id not in monster_edit.bad_ids_global) and (enemy.enemy_name not in more_bads):
        enemy.enemy_id = enemy.enemy_id + 4096
        valid_enemy_hex_ids.append(reverse_two_bytes(hex(enemy.enemy_id)[2:]))
        valid_enemies.append(enemy)

btl_bin_hexes = {}
for filename in os.listdir(btl_bin_path):
    btl_bin_filepath = pathlib.PureWindowsPath(btl_bin_path + "/" + filename)
    this_filepath = pathlib.Path(btl_bin_filepath)
    btl_hex = read_hex(this_filepath)
    this_hex_separated = " " + ' '.join([btl_hex[i:i + 2] for i in range(0, len(btl_hex), 2)]) + " "
    btl_bin_hexes[filename] = this_hex_separated

encounters_monster_ids = {'99x000_000.bin': [['1010', [29200]], ['1c10', [29197]]], '99x000_001.bin': [['0910', [29203]], ['2310', [29197]]], '99x000_002.bin': [['3210', [29203]], ['3310', [29197]]], '99x000_003.bin': [['5510', [29197]]], '99x001_000.bin': [['1610', [29209]], ['5c10', [29203]], ['6010', [29197]]], '99x001_001.bin': [['3f10', [29203]], ['4110', [29209]], ['9010', [29197]]], '99x001_002.bin': [['1f10', [29197]], ['2710', [29203]]], '99x001_003.bin': [['6c10', [29197]]], '99x001_004.bin': [['8410', [29197]]], '99x002_000.bin': [['0110', [29197]], ['4c10', [29209]], ['7b10', [29203]]], '99x002_001.bin': [['4610', [29197]]], '99x002_002.bin': [['3510', [29197]], ['4010', [29203]]], '99x002_003.bin': [['4810', [29197]]], '99x002_004.bin': [['7a10', [29197]]], '99x002_005.bin': [['a210', [29197]]], '99x100_000.bin': [['0a10', [29197]], ['1110', [29203]]], '99x100_001.bin': [['2410', [29197]], ['3e10', [29203]]], '99x100_002.bin': [['0210', [29197]], ['4210', [29203]]], '99x100_003.bin': [['2f10', [29197]]], '99x101_000.bin': [['7c10', [29197]], ['7d10', [29203]], ['2e11', [29209]]], '99x101_001.bin': [['0b10', [29197]], ['2510', [29203]], ['6d10', [29209]]], '99x101_002.bin': [['1210', [29197]], ['1710', [29203]], ['9310', [29209]]], '99x101_003.bin': [['2a10', [29197]]], '99x102_000.bin': [['0c10', [29203]], ['4a10', [29197]]], '99x102_001.bin': [['5810', [29203]], ['9110', [29197]]], '99x102_002.bin': [['5e10', [29197]], ['6310', [29203]]], '99x10a_000.bin': [['0c10', [29203]], ['4a10', [29197]]], '99x10a_001.bin': [['5810', [29203]], ['9110', [29197]]], '99x10a_002.bin': [['5e10', [29197]], ['6310', [29203]]], '99x10a_003.bin': [['9910', [29197]]], '99x200_000.bin': [['0310', [29197]], ['1310', [29203]], ['2010', [29209]]], '99x200_001.bin': [['0610', [29197]], ['1d10', [29203]]], '99x200_002.bin': [['1810', [29203]], ['3010', [29197]]], '99x200_003.bin': [['5b10', [29197]]], '99x200_004.bin': [['2e10', [29197]]], '99x200_005.bin': [['5710', [29197]]], '99x201_000.bin': [['4e10', [29197]], ['5210', [29203]]], '99x201_001.bin': [['1910', [29197]], ['2810', [29209]], ['6110', [29203]]], '99x201_002.bin': [['0410', [29197]], ['3710', [29209]], ['9210', [29203]]], '99x201_003.bin': [['3a10', [29197]]], '99x201_004.bin': [['2c10', [29197]]], '99x202_000.bin': [['4f10', [29197]], ['5310', [29203]]], '99x202_001.bin': [['5110', [29197]], ['7010', [29203]]], '99x202_002.bin': [['4d10', [29197]], ['9e10', [29203]]], '99x202_003.bin': [['9b10', [29197]]], '99x202_004.bin': [['ee10', [29197]]], '99x202_005.bin': [['2b10', [29197]]], '99x300_000.bin': [['2110', [29197]], ['2910', [29203]], ['3c10', [29209]]], '99x300_001.bin': [['dc10', [29203]], ['e410', [29197]]], '99x300_002.bin': [['e610', [29197]]], '99x301_000.bin': [['0710', [29209]], ['1a10', [29197]], ['4310', [29203]]], '99x301_001.bin': [['5910', [29203]], ['e210', [29197]]], '99x301_002.bin': [['5a10', [29197]]], '99x302_000.bin': [['2210', [29197]], ['3610', [29209]], ['6e10', [29203]]], '99x302_001.bin': [['0d10', [29197]], ['1410', [29203]]], '99x302_002.bin': [['9510', [29197]]], '99x302_003.bin': [['4910', [29197]]], '99x400_000.bin': [['2610', [29203]], ['4b10', [29197]]], '99x400_001.bin': [['0510', [29209]], ['3410', [29203]], ['9410', [29197]]], '99x400_002.bin': [['7910', [29197]]], '99x401_000.bin': [['e110', [29197]]], '99x401_001.bin': [['5f10', [29197]], ['6410', [29203]]], '99x401_002.bin': [['9c10', [29197]]], '99x401_003.bin': [['1e10', [29203]], ['df10', [29197]]], '99x402_000.bin': [['3810', [29197]], ['4710', [29203]]], '99x402_001.bin': [['0e10', [29203]], ['5d10', [29197]]], '99x402_002.bin': [['6a10', [29197]]], '99x402_003.bin': [['9610', [29197]]], '99x500_000.bin': [['0f11', [29197]]], '99x500_001.bin': [['0011', [29194]], ['1111', [29197]], ['1311', [29203]]], '99x500_002.bin': [['1511', [29203]], ['2611', [29197]]], '99x500_003.bin': [['1211', [29197]], ['1411', [29203]]], '99x500_004.bin': [['e710', [29197]]], '99x50a_000.bin': [['0f11', [29197]]], '99x50a_001.bin': [['0011', [29194]], ['1111', [29197]], ['1311', [29203]]], '99x50a_002.bin': [['1511', [29203]], ['2611', [29197]]], '99x50a_003.bin': [['1211', [29197]], ['1411', [29203]]], '99x50a_004.bin': [['e710', [29197]]], '99x50a_005.bin': [['6a10', [29203, 29209]], ['ed10', [29197]]], '99x600_000.bin': [['5010', [29197]], ['5410', [29203]]], '99x600_001.bin': [['0f10', [29203]], ['4410', [29197]]], '99x600_002.bin': [['7810', [29197]]], '99x600_003.bin': [['de10', [29197]]], '99x601_000.bin': [['7e10', [29197]], ['7f10', [29203]], ['d910', [29209]]], '99x601_001.bin': [['0810', [29197]], ['6210', [29203]]], '99x601_002.bin': [['2d10', [29197]]], '99x601_003.bin': [['1510', [29197]]], '99x60a_000.bin': [['7e10', [29197]], ['7f10', [29203]], ['d910', [29209]]], '99x60a_001.bin': [['0810', [29197]], ['6210', [29203]]], '99x60a_002.bin': [['2d10', [29197]]], '99x60a_003.bin': [['1510', [29197]]], '99x60a_004.bin': [['8010', [29197]]], '99x700_000.bin': [['3b10', [29197]]], '99x700_001.bin': [['eb10', [29197]]], '99x700_002.bin': [['da10', [29203]], ['db10', [29197]]], '99x700_003.bin': [['3110', [29203]], ['3d10', [29197]]], '99x700_004.bin': [['e510', [29197]]], '99x701_000.bin': [['e310', [29197]]], '99x701_001.bin': [['e010', [29197]]], '99x701_002.bin': [['7110', [29203]], ['9f10', [29197]]], '99x701_003.bin': [['9710', [29197]]], '99x701_004.bin': [['7110', [29203]], ['1611', [29197]]], '99x70a_000.bin': [['3b10', [29197]]], '99x70a_001.bin': [['eb10', [29197]]], '99x70a_002.bin': [['da10', [29203]], ['db10', [29197]]], '99x70a_003.bin': [['3110', [29203]], ['3d10', [29197]]], '99x70a_004.bin': [['e510', [29197]]], '99x70a_005.bin': [['a310', [29197]]], '99x70b_000.bin': [['e310', [29197]]], '99x70b_001.bin': [['e010', [29197]]], '99x70b_002.bin': [['7110', [29203]], ['9f10', [29197]]], '99x70b_003.bin': [['9710', [29197]]], '99x70b_004.bin': [['7110', [29203]], ['1611', [29197]]], '99x70b_005.bin': [['9a10', [29197]]], '99x800_000.bin': [['1b10', [29197]]], '99x800_001.bin': [['ef10', [29197]]], '99x800_002.bin': [['6f10', [29197]]], '99x800_003.bin': [['3910', [29197]]], '99x800_004.bin': [['dd10', [29197]]], '99x800_005.bin': [['4510', [29197]]], '99x800_006.bin': [['e810', [29197]]], '99x801_000.bin': [['1b10', [29197]]], '99x801_001.bin': [['2f11', [29197]]], '99x801_002.bin': [['3011', [29197]]], '99x801_003.bin': [['3910', [29197]]], '99x801_004.bin': [['dd10', [29197]]], '99x801_005.bin': [['4510', [29197]]], '99x801_006.bin': [['e810', [29197]]], '99x900_000.bin': [['1b10', [29197, 29203, 29209]]], '99x900_001.bin': [['1b10', [29197]], ['6f10', [29203]]], '99x900_002.bin': [['1b10', [29197]], ['4510', [29203]]], '99x900_003.bin': [['3910', [29197]], ['6f10', [29203]]], '99x900_004.bin': [['3910', [29197]], ['2f11', [29203]]], '99x900_005.bin': [['4510', [29197]], ['3011', [29203]]], '99x900_006.bin': [['dd10', [29197]]], '99x900_007.bin': [['e810', [29197]]], '99x901_000.bin': [['1b10', [29197, 29203, 29209]]], '99x901_001.bin': [['1b10', [29197]], ['6f10', [29203]]], '99x901_002.bin': [['1b10', [29197]], ['4510', [29203]]], '99x901_003.bin': [['3910', [29197]], ['6f10', [29203]]], '99x901_004.bin': [['3910', [29197]], ['2f11', [29203]]], '99x901_005.bin': [['4510', [29197]], ['3011', [29203]]], '99x901_006.bin': [['dd10', [29197]]], '99x901_007.bin': [['e810', [29197]]], 'bika06_080.bin': [['6a10', [4933]]], 'bika06_081.bin': [['6a10', [4933, 4939]]], 'bika06_082.bin': [['2611', [4933]]], 'bika06_083.bin': [['0f11', [4933]]], 'bika06_085.bin': [['0011', [4930]], ['1111', [4933]]], 'bika06_086.bin': [['1211', [4933]]], 'bika06_087.bin': [['1311', [4933]]], 'bika06_088.bin': [['1411', [29197]]], 'bika06_089.bin': [['1511', [29197]]], 'bika06_223.bin': [['6a10', [29197, 29203]]], 'bika06_224.bin': [['1f10', [29209]], ['3010', [29197]], ['6d10', [29203]]], 'bika06_225.bin': [['1f10', [29197]], ['4610', [29203]]], 'bika06_226.bin': [['0610', [29203]], ['6a10', [29209]], ['9010', [29197]]], 'bika06_227.bin': [['0110', [29197]], ['6a10', [29203]]], 'bika06_228.bin': [['2611', [29197]]], 'bika06_229.bin': [['6a10', [4939, 4945]], ['ed10', [4933]]], 'bika07_020.bin': [['0b10', [4933, 4939, 4945]]], 'bika07_021.bin': [['0b10', [4933]], ['3e10', [4939]]], 'bika07_022.bin': [['0b10', [4945]], ['3210', [4933, 4939]]], 'bika07_023.bin': [['3210', [4939]], ['3710', [4933]]], 'bika07_024.bin': [['3710', [4933]]], 'bika07_040.bin': [['3710', [4933, 4939]], ['ea10', [4945]]], 'bika07_041.bin': [['0b10', [4939, 4945]], ['1e10', [4933]], ['a110', [4951]]], 'bika07_042.bin': [['0b10', [4939]], ['0d10', [4933]], ['2110', [4945]]], 'bika07_043.bin': [['0b10', [4945]], ['1e10', [4939]], ['2110', [4933]], ['e910', [4951]]], 'bika07_044.bin': [['3c10', [4933]], ['ea10', [4939]]], 'bika07_080.bin': [['1e10', [4933]], ['3710', [4939, 4945]], ['a110', [4951]]], 'bika07_081.bin': [['0d10', [4939, 4945]], ['1e10', [4933]], ['e910', [4951]]], 'bika07_082.bin': [['0d10', [4933, 4939]], ['2110', [4945, 4951]]], 'bika07_083.bin': [['0d10', [4945]], ['1e10', [4939]], ['2110', [4933]], ['ea10', [4951]]], 'bika07_084.bin': [['3c10', [4933, 4939]], ['a110', [4945]]], 'bika07_228.bin': [['8a10', [143191, 143197]], ['f810', [143185]]], 'bika07_229.bin': [['0c11', [6997]], ['0d11', [7009]], ['0e11', [7003]]], 'bika07_235.bin': [['bc10', [6589]]], 'bika07_236.bin': [['0b10', [6589]], ['3e10', [6595]], ['bc10', [6601]]], 'bika07_237.bin': [['3210', [6589]], ['bc10', [6595]]], 'bika07_238.bin': [['3710', [6589]], ['bc10', [6595]]], 'bika08_000.bin': [['2410', [4933]], ['3e10', [4939]]], 'bika08_001.bin': [['3e10', [4933]]], 'bika08_002.bin': [['0b10', [4939]], ['2410', [4933]]], 'bika08_003.bin': [['3710', [4933]]], 'bika08_004.bin': [['0b10', [4939]], ['3e10', [4933]]], 'bika08_020.bin': [['0b10', [4933]], ['3e10', [4939]]], 'bika08_021.bin': [['3e10', [4933, 4939]]], 'bika08_022.bin': [['0b10', [4933, 4939]], ['2410', [4945]]], 'bika08_023.bin': [['2410', [4939]], ['3710', [4933]]], 'bika08_024.bin': [['0b10', [4939, 4945]], ['3710', [4933]]], 'bika08_040.bin': [['1e10', [4933]], ['3710', [4939]], ['e910', [4945]]], 'bika08_041.bin': [['0b10', [4939]], ['1e10', [4933]], ['ea10', [4945]]], 'bika08_042.bin': [['0d10', [4933]], ['2110', [4939]], ['a110', [4945]]], 'bika08_043.bin': [['1e10', [4939]], ['2110', [4933]], ['e910', [4945]]], 'bika08_044.bin': [['3c10', [4933]], ['ea10', [4939]]], 'bika08_080.bin': [['1e10', [4933, 4939]], ['a110', [4945]]], 'bika08_081.bin': [['0d10', [4939, 4945]], ['1e10', [4933]], ['e910', [4951]]], 'bika08_082.bin': [['0d10', [4933]], ['2110', [4939, 4945]], ['ea10', [4951]]], 'bika08_083.bin': [['0d10', [4945]], ['1e10', [4939]], ['2110', [4933]], ['a110', [4951]]], 'bika08_084.bin': [['3c10', [4933]], ['3e10', [4939]], ['e910', [4945]]], 'bika08_224.bin': [['0b10', [4939]], ['3710', [4933]]], 'bika08_225.bin': [['3710', [4933]]], 'bika08_226.bin': [['0b10', [4939]], ['2410', [4933]]], 'bika08_227.bin': [['3e10', [4933]]], 'bika08_228.bin': [['0b10', [4933]], ['2410', [4939]]], 'bika08_229.bin': [['0c11', [6997]], ['0d11', [7009]], ['0e11', [7003]]], 'bika08_230.bin': [['bc10', [6589]]], 'bika08_231.bin': [['0b10', [6589]], ['bc10', [6595]]], 'bika08_232.bin': [['2410', [6589]], ['bc10', [6595]]], 'bika08_233.bin': [['3e10', [6589]], ['bc10', [6595]]], 'bika08_235.bin': [['bc10', [6589]]], 'bika08_236.bin': [['0b10', [6589, 6595]], ['bc10', [6601]]], 'bika08_237.bin': [['0b10', [6595]], ['2410', [6589]], ['bc10', [6601]]], 'bika08_238.bin': [['3e10', [6589]], ['bc10', [6595]]], 'bika09_020.bin': [['4f10', [4933, 4939]]], 'bika09_021.bin': [['4f10', [4933]]], 'bika09_022.bin': [['5310', [4933, 4939]]], 'bika09_023.bin': [['5310', [4933]]], 'bika09_040.bin': [['4f10', [4933, 4939]], ['e910', [4945]]], 'bika09_041.bin': [['4f10', [4933, 4939]], ['5310', [4945]]], 'bika09_042.bin': [['4f10', [4933]], ['5310', [4939]], ['ea10', [4945]]], 'bika09_043.bin': [['4f10', [4933]], ['5310', [4939, 4945]]], 'bika09_044.bin': [['9c10', [4933]], ['a110', [4939]]], 'bika09_080.bin': [['4f10', [4933, 4939, 4945, 4951]]], 'bika09_081.bin': [['4f10', [4933, 4939, 4945]], ['5310', [4951]]], 'bika09_082.bin': [['5310', [4933, 4939, 4945]]], 'bika09_083.bin': [['5310', [4933, 4939, 4945]]], 'bika09_084.bin': [['9c10', [4933]], ['e910', [4939]]], 'bika09_220.bin': [['4f10', [4939, 4945, 4951]], ['5310', [4933]]], 'bika09_221.bin': [['4f10', [4951]], ['5310', [4933, 4939, 4945]]], 'bika09_222.bin': [['9c10', [4933]]], 'bika09_223.bin': [['4f10', [4933, 4939]], ['5310', [4945, 4951]]], 'bika09_224.bin': [['4f10', [4945]], ['5310', [4933, 4939]]], 'bika09_225.bin': [['4f10', [4933, 4939]], ['5310', [4945]]], 'bika09_226.bin': [['4f10', [4939]], ['5310', [4933]]], 'bika09_227.bin': [['5310', [4933]]], 'bika09_228.bin': [['4f10', [4933]]], 'bika09_229.bin': [['0c11', [6997]], ['0d11', [7009]], ['0e11', [7003]]], 'bika09_235.bin': [['bc10', [6589]]], 'bika09_236.bin': [['4f10', [6589]], ['bc10', [6595]]], 'bika09_237.bin': [['4f10', [6595]], ['5310', [6589]], ['bc10', [6601]]], 'bika09_238.bin': [['5310', [6589]], ['bc10', [6595]]], 'bika13_040.bin': [['0d10', [4939, 4945]], ['3c10', [4933]], ['e910', [4951]]], 'bika13_041.bin': [['3c10', [4933]], ['ea10', [4939]]], 'bika13_042.bin': [['0d10', [4933]], ['1e10', [4939, 4945]], ['a110', [4951]]], 'bika13_043.bin': [['0d10', [4939]], ['1e10', [4945]], ['2110', [4933]], ['e910', [4951]]], 'bika13_044.bin': [['2110', [4933, 4939]], ['ea10', [4945]]], 'bika13_080.bin': [['0d10', [4939, 4945]], ['3c10', [4933]], ['a110', [4951]]], 'bika13_081.bin': [['3c10', [4933, 4939]], ['e910', [4945]]], 'bika13_082.bin': [['0d10', [4933]], ['1e10', [4939, 4945]], ['ea10', [4951]]], 'bika13_083.bin': [['0d10', [4939]], ['1e10', [4945]], ['2110', [4933]], ['a110', [4951]]], 'bika13_084.bin': [['2110', [4933, 4939, 4945]], ['e910', [4951]]], 'bika13_229.bin': [['0c11', [6997]], ['0d11', [7009]], ['0e11', [7003]]], 'bika14_020.bin': [['2c10', [4933]]], 'bika14_021.bin': [['2b10', [4933]]], 'bika14_022.bin': [['0b10', [4933, 4939, 4945]]], 'bika14_023.bin': [['0b10', [4939, 4945]], ['3e10', [4933]]], 'bika14_024.bin': [['3510', [4933, 4939, 4945]]], 'bika14_040.bin': [['2c10', [4933]]], 'bika14_041.bin': [['2b10', [4933]], ['ea10', [4939]]], 'bika14_042.bin': [['0b10', [4939, 4945]], ['0d10', [4933]], ['a110', [4951]]], 'bika14_043.bin': [['0d10', [4939]], ['1e10', [4945]], ['2110', [4933]], ['e910', [4951]]], 'bika14_044.bin': [['1e10', [4933, 4939]], ['ea10', [4945]]], 'bika14_045.bin': [['5910', [29197]], ['a110', [29203]]], 'bika14_046.bin': [['0d10', [29203]], ['5910', [29197]], ['e910', [29209]]], 'bika14_080.bin': [['2c10', [4933]]], 'bika14_081.bin': [['2b10', [4933]]], 'bika14_082.bin': [['0d10', [4933, 4939, 4945]], ['ea10', [4951]]], 'bika14_083.bin': [['0d10', [4939]], ['1e10', [4945]], ['2110', [4933]], ['a110', [4951]]], 'bika14_084.bin': [['1e10', [4933, 4939]], ['e910', [4945]]], 'bika14_085.bin': [['5910', [29197]], ['ea10', [29203]]], 'bika14_086.bin': [['0d10', [29203]], ['5910', [29197]], ['a110', [29209]]], 'bika14_227.bin': [['2b10', [29197]]], 'bika14_228.bin': [['2c10', [29197]]], 'bika14_229.bin': [['0c11', [6997]], ['0d11', [7009]], ['0e11', [7003]]], 'bika14_235.bin': [['bc10', [6589]]], 'bika14_236.bin': [['3510', [6589, 6595]], ['bc10', [6601]]], 'bika14_237.bin': [['0b10', [6589]], ['3510', [6595]], ['bc10', [6601]]], 'bika14_238.bin': [['0b10', [6595]], ['3e10', [6589]], ['bc10', [6601]]], 'bsil05_000.bin': [['5510', [4933]]], 'bsil05_001.bin': [['0910', [4933]], ['2710', [4939]]], 'bsil05_002.bin': [['0910', [4933, 4939, 4945, 4951]]], 'bsil05_003.bin': [['0910', [4933]], ['1010', [4936]]], 'bsil05_004.bin': [['2710', [4933]]], 'bsil05_020.bin': [['5510', [4933]]], 'bsil05_021.bin': [['0910', [4933]], ['2710', [4939, 4945]]], 'bsil05_022.bin': [['0910', [4933, 4939, 4945, 4951]]], 'bsil05_023.bin': [['1010', [4933, 4939]]], 'bsil05_024.bin': [['2710', [4933, 4939]]], 'bsil05_040.bin': [['5710', [4933]], ['a110', [4939]]], 'bsil05_041.bin': [['3a10', [4933]], ['e910', [4939]]], 'bsil05_042.bin': [['0310', [4939]], ['2910', [4933]], ['ea10', [4945]]], 'bsil05_043.bin': [['0310', [4933, 4939]], ['a110', [4945]]], 'bsil05_044.bin': [['2910', [4933]], ['e910', [4939]]], 'bsil05_080.bin': [['5710', [4933]], ['a110', [4939]]], 'bsil05_081.bin': [['3a10', [4933]], ['e910', [4939]]], 'bsil05_082.bin': [['0310', [4939]], ['2910', [4933]], ['ea10', [4945]]], 'bsil05_083.bin': [['0310', [4933, 4939, 4945]]], 'bsil05_084.bin': [['0710', [4933, 4939]], ['a110', [4945]]], 'bsil05_085.bin': [['df10', [4933]], ['e910', [4939]]], 'bsil05_086.bin': [['2910', [4933, 4939]]], 'bsil05_230.bin': [['bc10', [6589]]], 'bsil05_231.bin': [['0910', [6589]], ['1010', [6592]], ['bc10', [6601]]], 'bsil05_232.bin': [['1010', [6589]], ['bc10', [6595]]], 'bsil05_233.bin': [['0910', [6589, 6595]], ['bc10', [6601]]], 'bsil05_235.bin': [['bc10', [6589]]], 'bsil05_236.bin': [['0910', [6589, 6595]], ['bc10', [6601]]], 'bsil05_237.bin': [['0910', [6595]], ['1010', [6589]], ['bc10', [6601]]], 'bsil05_238.bin': [['0910', [6589, 6595, 6601]], ['bc10', [6607]]], 'bsil07_000.bin': [['5510', [29197]]], 'bsil07_001.bin': [['0910', [4933]], ['2710', [4939]]], 'bsil07_002.bin': [['0910', [4933, 4939]]], 'bsil07_003.bin': [['0910', [4933]], ['1010', [4936]]], 'bsil07_004.bin': [['2710', [4933]]], 'bsil07_020.bin': [['5510', [4933]]], 'bsil07_021.bin': [['0910', [4933]], ['1010', [4942]], ['2710', [4939]]], 'bsil07_022.bin': [['0910', [4933, 4939, 4945]]], 'bsil07_023.bin': [['0910', [4933, 4939]], ['1010', [4942]]], 'bsil07_024.bin': [['2710', [4933, 4939]]], 'bsil07_040.bin': [['5710', [4933]]], 'bsil07_041.bin': [['3a10', [4933]]], 'bsil07_042.bin': [['0310', [4939]], ['2910', [4933]]], 'bsil07_043.bin': [['0310', [4933, 4939]]], 'bsil07_044.bin': [['2910', [4933]]], 'bsil07_080.bin': [['5710', [4933]]], 'bsil07_081.bin': [['3a10', [4933]]], 'bsil07_082.bin': [['0310', [4939, 4945]], ['2910', [4933]]], 'bsil07_083.bin': [['0310', [4933, 4939, 4945]]], 'bsil07_084.bin': [['0710', [4933, 4939]]], 'bsil07_085.bin': [['df10', [4933]]], 'bsil07_086.bin': [['2910', [4933, 4939]]], 'bsil07_230.bin': [['bc10', [6589]]], 'bsil07_231.bin': [['0910', [6595]], ['1010', [6589]], ['bc10', [6601]]], 'bsil07_232.bin': [['1010', [6589]], ['bc10', [6595]]], 'bsil07_233.bin': [['0910', [6589, 6595]], ['bc10', [6601]]], 'bsil07_235.bin': [['bc10', [6589]]], 'bsil07_236.bin': [['0910', [6595]], ['1010', [6589]], ['bc10', [6601]]], 'bsil07_237.bin': [['1010', [6589]], ['bc10', [6595]]], 'bsil07_238.bin': [['0910', [6589, 6595]], ['bc10', [6601]]], 'bsil08_000.bin': [['9010', [4933, 4939, 4945]]], 'bsil08_001.bin': [['0110', [4933, 4939]]], 'bsil08_002.bin': [['0110', [4933]], ['9010', [4939]]], 'bsil08_004.bin': [['0110', [4933]], ['4c10', [4939]]], 'bsil08_020.bin': [['9010', [4933, 4939, 4945]]], 'bsil08_021.bin': [['0110', [4933, 4945]], ['4c10', [4939]]], 'bsil08_022.bin': [['0310', [4933]], ['9010', [4939]]], 'bsil08_023.bin': [['3510', [4933, 4939]]], 'bsil08_024.bin': [['3510', [4933]], ['4c10', [4939, 4945]]], 'bsil08_040.bin': [['7a10', [4933]]], 'bsil08_041.bin': [['3610', [4933]], ['ea10', [4939]]], 'bsil08_042.bin': [['0310', [4933, 4939]], ['a110', [4945]]], 'bsil08_043.bin': [['0310', [4933]], ['4d10', [4939]], ['e910', [4945]]], 'bsil08_044.bin': [['0310', [4939]], ['4d10', [4933]], ['ea10', [4945]]], 'bsil08_080.bin': [['7a10', [4933]]], 'bsil08_081.bin': [['3610', [4933, 4939]], ['a110', [4945]]], 'bsil08_082.bin': [['0310', [4939, 4945]], ['3610', [4933]], ['e910', [4951]]], 'bsil08_083.bin': [['4d10', [4933, 4939]], ['ea10', [4945]]], 'bsil08_084.bin': [['0310', [4939]], ['4d10', [4933]], ['a110', [4945]]], 'bsil08_229.bin': [['7a10', [4933]]], 'bsyt01_040.bin': [['7010', [4933, 4939]]], 'bsyt01_041.bin': [['3010', [4933, 4939]]], 'bsyt01_042.bin': [['0610', [4933]], ['3010', [4939]]], 'bsyt01_043.bin': [['0610', [4933, 4939]]], 'bsyt05_229.bin': [['a410', [4933]]], 'bvyt11_020.bin': [['1810', [4933, 4939]]], 'bvyt11_021.bin': [['1310', [4933]], ['1810', [4939]]], 'bvyt11_023.bin': [['2510', [4933, 4939]]], 'bvyt11_040.bin': [['1810', [4933, 4939, 4945]]], 'bvyt11_041.bin': [['1310', [4933, 4939]]], 'bvyt11_042.bin': [['6110', [4933, 4939]]], 'bvyt11_043.bin': [['1310', [4933]], ['1810', [4939]], ['6110', [4945]]], 'bvyt11_044.bin': [['4710', [4933, 4939]]], 'bvyt11_080.bin': [['1810', [4933, 4939, 4945]]], 'bvyt11_081.bin': [['1310', [4939]], ['4710', [4933]]], 'bvyt11_082.bin': [['6110', [4933, 4939, 4945]]], 'bvyt11_083.bin': [['1310', [4933]], ['1810', [4939]], ['6110', [4945]]], 'bvyt11_084.bin': [['1810', [4945]], ['4710', [4933, 4939]]], 'bvyt11_227.bin': [['2510', [4933, 4939]]], 'bvyt11_228.bin': [['1310', [4933]], ['1810', [4939]]], 'bvyt11_229.bin': [['1810', [4933, 4939]]], 'djyt06_040.bin': [['7010', [4933, 4939, 4945]]], 'djyt06_041.bin': [['3010', [4933, 4939]]], 'djyt06_042.bin': [['7010', [4933, 4939]]], 'djyt06_043.bin': [['5110', [4933]]], 'djyt06_221.bin': [['5110', [29197]]], 'djyt06_222.bin': [['7010', [29197, 29203]]], 'djyt06_223.bin': [['3010', [29197, 29203]]], 'djyt06_224.bin': [['7010', [29197, 29203, 29209]]], 'djyt08_229.bin': [['a610', [4933]]], 'dome00_000.bin': [['4810', [4933]]], 'dome00_001.bin': [['1610', [4933, 4939]]], 'dome00_002.bin': [['1610', [4933, 4945]], ['4010', [4939]]], 'dome00_003.bin': [['3210', [4933]], ['4010', [4939]]], 'dome00_004.bin': [['7c10', [4939, 4951]], ['8610', [4933, 4945]]], 'dome00_005.bin': [['7c10', [4939, 4945, 4951]], ['8610', [4933]]], 'dome00_006.bin': [['8610', [4933, 4939]], ['8910', [4945, 4951]]], 'dome00_020.bin': [['4810', [4933]]], 'dome00_021.bin': [['3210', [4939]], ['4010', [4933, 4945]]], 'dome00_022.bin': [['1610', [4933, 4939, 4945]]], 'dome00_023.bin': [['1610', [4933, 4945]], ['4010', [4939]]], 'dome00_024.bin': [['3210', [4933]], ['4010', [4939, 4945]]], 'dome00_040.bin': [['1910', [4933, 4939]], ['a110', [4945]]], 'dome00_041.bin': [['1910', [4933, 4939, 4945]]], 'dome00_042.bin': [['5d10', [4933]], ['ea10', [4939]]], 'dome00_043.bin': [['5910', [4933]], ['a110', [4939]]], 'dome00_044.bin': [['e610', [4933]]], 'dome00_080.bin': [['1910', [4933, 4939, 4945]], ['e910', [4951]]], 'dome00_081.bin': [['1910', [4933]], ['5910', [4939]], ['ea10', [4945]]], 'dome00_082.bin': [['1910', [4939]], ['5d10', [4933]], ['a110', [4945]]], 'dome00_083.bin': [['5910', [4933, 4939]], ['e910', [4945]]], 'dome00_084.bin': [['e610', [4933]]], 'dome00_227.bin': [['8610', [4933, 4939]], ['8910', [4945, 4951]]], 'dome00_228.bin': [['7c10', [4939, 4945, 4951]], ['8610', [4933]]], 'dome00_229.bin': [['7c10', [4939, 4951]], ['8610', [4933, 4945]]], 'dome08_000.bin': [['4810', [4933]]], 'dome08_001.bin': [['4010', [4933, 4939]]], 'dome08_002.bin': [['1610', [4933, 4939, 4945]]], 'dome08_003.bin': [['1610', [4933]], ['3210', [4945]], ['4010', [4939]]], 'dome08_004.bin': [['1610', [4933]], ['3210', [4939, 4945]]], 'dome08_020.bin': [['4810', [4933]]], 'dome08_021.bin': [['1610', [4945]], ['4010', [4933, 4939]]], 'dome08_022.bin': [['1610', [4933, 4939]], ['1910', [4945]]], 'dome08_023.bin': [['1610', [4933]], ['3210', [4945]], ['4010', [4939]]], 'dome08_024.bin': [['1610', [4933]], ['3210', [4939, 4945]]], 'dome08_040.bin': [['a210', [4933]]], 'dome08_041.bin': [['1910', [4933, 4939]], ['e910', [4945]]], 'dome08_042.bin': [['1910', [4939]], ['6e10', [4933, 4945]], ['ea10', [4951]]], 'dome08_043.bin': [['1910', [4939]], ['5d10', [4933]], ['a110', [4945]]], 'dome08_044.bin': [['5d10', [4933]], ['e910', [4939]]], 'dome08_080.bin': [['a210', [4933]]], 'dome08_081.bin': [['1910', [4933, 4939, 4945]], ['ea10', [4951]]], 'dome08_082.bin': [['1910', [4933, 4945]], ['6e10', [4939]], ['a110', [4951]]], 'dome08_083.bin': [['5d10', [4939]], ['6e10', [4933]], ['e910', [4945]]], 'dome08_084.bin': [['1910', [4939]], ['5d10', [4933]], ['ea10', [4945]]], 'dome08_229.bin': [['a210', [4933]]], 'genk00_000.bin': [['b410', [4933, 4939]]], 'genk00_001.bin': [['b410', [4933, 4939, 4945]]], 'genk00_002.bin': [['1710', [4933]], ['3310', [4939]]], 'genk00_003.bin': [['4610', [4933]]], 'genk00_004.bin': [['1010', [4933, 4939]]], 'genk00_020.bin': [['b410', [4933]], ['0a11', [4939]]], 'genk00_021.bin': [['b410', [4933, 4939, 4945]]], 'genk00_022.bin': [['1310', [4933]], ['3310', [4939]]], 'genk00_023.bin': [['1710', [4933, 4939]], ['4610', [4945]]], 'genk00_024.bin': [['1710', [4945]], ['4610', [4933, 4939]]], 'genk00_040.bin': [['a110', [4945]], ['b410', [4939]], ['d410', [4933]]], 'genk00_041.bin': [['d410', [4933]], ['0a11', [4939, 4945]]], 'genk00_042.bin': [['1310', [4933, 4939]], ['e910', [4945]]], 'genk00_043.bin': [['3410', [4933]], ['ea10', [4939]]], 'genk00_044.bin': [['1710', [4939, 4945]], ['1a10', [4933]], ['a110', [4951]]], 'genk00_060.bin': [['d410', [29197]], ['e910', [29209]], ['0a11', [29203]]], 'genk00_061.bin': [['b410', [29203, 29209]], ['d410', [29197]]], 'genk00_062.bin': [['0710', [29203]], ['e210', [29197]], ['ea10', [29209]]], 'genk00_063.bin': [['1310', [29197]], ['3410', [29203]], ['a110', [29209]]], 'genk00_064.bin': [['1710', [29203, 29209]], ['1a10', [29197]], ['e910', [29215]]], 'genk00_080.bin': [['d410', [4933]], ['ea10', [4945]], ['0a11', [4939]]], 'genk00_081.bin': [['d410', [4933, 4939]], ['0a11', [4945]]], 'genk00_082.bin': [['1310', [4939]], ['1a10', [4933]], ['a110', [4951]], ['e210', [4945]]], 'genk00_083.bin': [['1a10', [4933]], ['3410', [4939]], ['e910', [4945]]], 'genk00_084.bin': [['0710', [4933, 4939]], ['ea10', [4945]]], 'genk00_229.bin': [['b410', [4933, 4939]]], 'genk00_230.bin': [['bc10', [6589]]], 'genk00_231.bin': [['1010', [6592]], ['1710', [6589]], ['bc10', [6601]]], 'genk00_232.bin': [['1710', [6589]], ['bc10', [6595]]], 'genk00_233.bin': [['4610', [6589]], ['bc10', [6595]]], 'genk00_235.bin': [['bc10', [6589]]], 'genk00_236.bin': [['1710', [6589, 6595]], ['bc10', [6601]]], 'genk00_237.bin': [['1710', [6589]], ['4610', [6595]], ['bc10', [6601]]], 'genk00_238.bin': [['1310', [6589]], ['bc10', [6595]]], 'genk15_060.bin': [['b410', [29203]], ['d410', [29197]], ['e910', [29209]]], 'genk15_061.bin': [['d410', [29197, 29203]], ['0a11', [29209]]], 'genk15_062.bin': [['0310', [29197]], ['1310', [29203]], ['ea10', [29209]]], 'genk15_063.bin': [['0310', [29197, 29203, 29209]], ['a110', [29215]]], 'genk15_064.bin': [['0710', [29203]], ['e210', [29197]], ['e910', [29209]]], 'genk15_065.bin': [['9b10', [29197]]], 'genk16_000.bin': [['b410', [4933, 4939]]], 'genk16_001.bin': [['b410', [4933, 4939, 4945]]], 'genk16_002.bin': [['1010', [4936]], ['4a10', [4933]]], 'genk16_003.bin': [['4a10', [4933]]], 'genk16_004.bin': [['1710', [4933]], ['3310', [4939]]], 'genk16_005.bin': [['9b10', [4933]]], 'genk16_020.bin': [['b410', [4933]], ['0a11', [4939]]], 'genk16_021.bin': [['b410', [4933, 4939, 4945]]], 'genk16_022.bin': [['4a10', [4933, 4939]]], 'genk16_023.bin': [['1710', [4933, 4939]], ['3310', [4945]]], 'genk16_024.bin': [['1310', [4939]], ['1710', [4933]]], 'genk16_025.bin': [['9b10', [4933]]], 'genk16_040.bin': [['a110', [4945]], ['d410', [4933]], ['0a11', [4939]]], 'genk16_041.bin': [['b410', [4939, 4945]], ['d410', [4933]]], 'genk16_042.bin': [['0310', [4933]], ['1310', [4939]], ['e910', [4945]]], 'genk16_043.bin': [['0310', [4933, 4939]], ['ea10', [4945]]], 'genk16_044.bin': [['4a10', [4933, 4939]], ['a110', [4945]]], 'genk16_045.bin': [['9b10', [4933]]], 'genk16_060.bin': [['b410', [4939]], ['d410', [4933]], ['e910', [4945]]], 'genk16_061.bin': [['d410', [4933, 4939]], ['0a11', [4945]]], 'genk16_062.bin': [['0310', [4933]], ['1310', [4939]], ['ea10', [4945]]], 'genk16_063.bin': [['0310', [4933, 4939, 4945]], ['a110', [4951]]], 'genk16_064.bin': [['0710', [4939]], ['e210', [4933]], ['e910', [4945]]], 'genk16_065.bin': [['9b10', [4933]]], 'genk16_080.bin': [['d410', [4933]], ['e910', [4945]], ['0a11', [4939]]], 'genk16_081.bin': [['d410', [4933, 4939]], ['0a11', [4945]]], 'genk16_082.bin': [['0710', [4939]], ['1310', [4933]], ['a110', [4945]]], 'genk16_083.bin': [['0310', [4933, 4945]], ['e210', [4939]], ['ea10', [4951]]], 'genk16_084.bin': [['0710', [4939]], ['e210', [4933]], ['e910', [4945]]], 'genk16_085.bin': [['9b10', [4933]]], 'genk16_230.bin': [['bc10', [6589]]], 'genk16_231.bin': [['1710', [6589]], ['bc10', [6595]]], 'genk16_232.bin': [['4a10', [6589]], ['bc10', [6595]]], 'genk16_233.bin': [['1010', [6589]], ['bc10', [6595]]], 'genk16_235.bin': [['bc10', [6589]]], 'genk16_236.bin': [['1710', [6589, 6595]], ['bc10', [6601]]], 'genk16_237.bin': [['4a10', [6589]], ['bc10', [6595]]], 'genk16_238.bin': [['1310', [6589]], ['bc10', [6595]]], 'guad08_020.bin': [['8710', [4933]], ['8a10', [4939]], ['2e11', [4945]]], 'guad08_021.bin': [['8710', [4933, 4939]], ['2e11', [4945]]], 'guad08_022.bin': [['8a10', [4933, 4939]], ['2e11', [4945, 4951]]], 'guad08_023.bin': [['8710', [4933, 4939]], ['8a10', [4945, 4951]]], 'guad08_040.bin': [['0510', [29197, 29203]]], 'guad08_041.bin': [['0510', [29197]], ['4310', [29203]]], 'guad08_042.bin': [['1a10', [29197]], ['4310', [29203]]], 'guad08_043.bin': [['4d10', [29197]]], 'guad08_080.bin': [['0510', [29197, 29203]], ['4310', [29209]]], 'guad08_081.bin': [['4310', [29197, 29203]]], 'guad08_082.bin': [['1a10', [29197, 29203]], ['4310', [29209]]], 'guad08_083.bin': [['1a10', [29203]], ['4d10', [29197]]], 'guad08_227.bin': [['f510', [143185]], ['fa10', [143191]], ['fd10', [143197]]], 'guad08_228.bin': [['f410', [143185]], ['f910', [143191]]], 'guad08_229.bin': [['8710', [143197]], ['8a10', [143191]], ['f310', [143185]]], 'ikai09_080.bin': [['de10', [4933]]], 'ikai09_081.bin': [['0810', [4939]], ['de10', [4933]]], 'ikai09_082.bin': [['0810', [4933, 4939]]], 'ikai09_083.bin': [['7110', [4933, 4939]]], 'ikai09_084.bin': [['0810', [4939]], ['7110', [4933]]], 'ikai09_085.bin': [['e310', [4933, 4939]]], 'ikai09_086.bin': [['e010', [4933]]], 'ikai09_087.bin': [['e010', [4933, 4939]]], 'ikai09_088.bin': [['0810', [4939]], ['e010', [4933]]], 'ikai09_089.bin': [['de10', [4933]], ['e310', [4939]]], 'ikai09_090.bin': [['e410', [4933, 4939]]], 'ikai09_091.bin': [['de10', [4933]], ['df10', [4939]]], 'ikai09_092.bin': [['0710', [4939]], ['0810', [4933]]], 'ikai09_093.bin': [['e210', [4933, 4939]]], 'ikai09_094.bin': [['e010', [4933, 4939]]], 'ikai09_227.bin': [['a910', [4933]]], 'ikai09_228.bin': [['ab10', [4945]], ['ac10', [4939]], ['ad10', [4933]]], 'ikai09_229.bin': [['a710', [4933]]], 'kami00_000.bin': [['4210', [4933]]], 'kami00_001.bin': [['3510', [4933]]], 'kami00_002.bin': [['0210', [4933]], ['3510', [4939]]], 'kami00_003.bin': [['0210', [4939]], ['4210', [4933]]], 'kami00_004.bin': [['5c10', [4933]]], 'kami00_020.bin': [['4210', [4933, 4939, 4945]]], 'kami00_021.bin': [['0210', [4939]], ['3510', [4945]], ['4210', [4933]]], 'kami00_022.bin': [['3510', [4933]], ['3710', [4939]]], 'kami00_023.bin': [['0210', [4933, 4945]], ['0410', [4939]]], 'kami00_024.bin': [['3510', [4939]], ['5c10', [4933]]], 'kami00_040.bin': [['3710', [4933]], ['a110', [4939]]], 'kami00_041.bin': [['0310', [4939]], ['3710', [4933]], ['e910', [4945]]], 'kami00_042.bin': [['0310', [4933]], ['2010', [4939, 4945]], ['ea10', [4951]]], 'kami00_043.bin': [['3a10', [4933]], ['a110', [4939]]], 'kami00_044.bin': [['5710', [4933]], ['e910', [4939]]], 'kami00_060.bin': [['3710', [4933]], ['ea10', [4939]]], 'kami00_061.bin': [['0310', [4945]], ['2010', [4939]], ['3710', [4933]], ['a110', [4951]]], 'kami00_062.bin': [['0310', [4933, 4939]], ['2010', [4945]], ['e910', [4951]]], 'kami00_063.bin': [['0710', [4939]], ['e210', [4933]], ['ea10', [4945]]], 'kami00_064.bin': [['3410', [4933]], ['a110', [4939]]], 'kami00_065.bin': [['3410', [4933]], ['4310', [4939]], ['a110', [4945]]], 'kami00_066.bin': [['e110', [4933]], ['e910', [4939]]], 'kami00_067.bin': [['3a10', [4933]], ['ea10', [4939]]], 'kami00_068.bin': [['5710', [4933]], ['a110', [4939]]], 'kami00_080.bin': [['3710', [4933, 4939, 4945]], ['e910', [4951]]], 'kami00_081.bin': [['0310', [4945]], ['2010', [4939]], ['3710', [4933]], ['ea10', [4951]]], 'kami00_082.bin': [['0310', [4933, 4939]], ['2010', [4945]], ['a110', [4951]]], 'kami00_083.bin': [['0710', [4939]], ['e210', [4933]], ['e910', [4945]]], 'kami00_084.bin': [['3410', [4933, 4939]], ['ea10', [4945]]], 'kami00_085.bin': [['3410', [4933]], ['4310', [4939]], ['a110', [4945]]], 'kami00_086.bin': [['e110', [4933]], ['e910', [4939]]], 'kami00_087.bin': [['3a10', [4933]], ['ea10', [4939]]], 'kami00_088.bin': [['5710', [4933]], ['a110', [4939]]], 'kami00_228.bin': [['4910', [4933]]], 'kami00_229.bin': [['4b10', [4933]]], 'kami00_230.bin': [['bc10', [6589]]], 'kami00_231.bin': [['4210', [6589]], ['bc10', [6595]]], 'kami00_232.bin': [['0210', [6589]], ['bc10', [6595]]], 'kami00_233.bin': [['3510', [6589]], ['bc10', [6595]]], 'kami00_235.bin': [['bc10', [6589]]], 'kami00_236.bin': [['4210', [6589, 6595]], ['bc10', [6601]]], 'kami00_237.bin': [['0210', [6589, 6595]], ['bc10', [6601]]], 'kami00_238.bin': [['3710', [6589]], ['bc10', [6595]]], 'kami03_000.bin': [['0210', [4933, 4939, 4945]]], 'kami03_001.bin': [['0210', [4933, 4939]]], 'kami03_002.bin': [['0210', [4933]], ['3510', [4939]]], 'kami03_003.bin': [['3510', [4933]], ['4110', [4939]]], 'kami03_004.bin': [['6c10', [4933]]], 'kami03_020.bin': [['0210', [4933, 4945]], ['0410', [4939]]], 'kami03_021.bin': [['3510', [4933]], ['3710', [4939]]], 'kami03_022.bin': [['0210', [4933]], ['3510', [4939, 4945]]], 'kami03_023.bin': [['0210', [4933]], ['4110', [4939, 4945, 4951]]], 'kami03_024.bin': [['6c10', [4933]]], 'kami03_040.bin': [['0410', [4933, 4939]], ['e910', [4945]]], 'kami03_041.bin': [['3710', [4933]], ['ea10', [4939]]], 'kami03_042.bin': [['1910', [4933, 4939, 4945]], ['a110', [4951]]], 'kami03_043.bin': [['5910', [4933]], ['e910', [4939]]], 'kami03_044.bin': [['5710', [4933]], ['ea10', [4939]]], 'kami03_060.bin': [['0410', [4933, 4939, 4945]], ['a110', [4951]]], 'kami03_061.bin': [['0410', [4939]], ['3710', [4933]], ['e910', [4945]]], 'kami03_062.bin': [['1910', [4933, 4939, 4945]], ['ea10', [4951]]], 'kami03_063.bin': [['0710', [4939]], ['a110', [4945]], ['e210', [4933]]], 'kami03_064.bin': [['3410', [4933]], ['e910', [4939]]], 'kami03_065.bin': [['3410', [4933]], ['4310', [4939]], ['ea10', [4945]]], 'kami03_066.bin': [['a110', [4939]], ['e110', [4933]]], 'kami03_067.bin': [['3a10', [4933]], ['e910', [4939]]], 'kami03_068.bin': [['5710', [4933]], ['ea10', [4939]]], 'kami03_080.bin': [['0410', [4933, 4939, 4945]], ['a110', [4951]]], 'kami03_081.bin': [['0410', [4939]], ['3710', [4933, 4945]], ['e910', [4951]]], 'kami03_082.bin': [['1910', [4933, 4939, 4945]], ['ea10', [4951]]], 'kami03_083.bin': [['0710', [4939]], ['1910', [4945]], ['a110', [4951]], ['e210', [4933]]], 'kami03_084.bin': [['3410', [4933, 4939]], ['e910', [4945]]], 'kami03_085.bin': [['3410', [4933]], ['4310', [4939, 4945]], ['ea10', [4951]]], 'kami03_086.bin': [['a110', [4939]], ['e110', [4933]]], 'kami03_087.bin': [['3a10', [4933]], ['e910', [4939]]], 'kami03_088.bin': [['5710', [4933]], ['ea10', [4939]]], 'kami03_228.bin': [['4910', [4933]]], 'kami03_229.bin': [['4b10', [4933]]], 'kami03_230.bin': [['3510', [6589]], ['bc10', [6595]]], 'kami03_231.bin': [['0210', [6589]], ['bc10', [6595]]], 'kami03_232.bin': [['4110', [6589]], ['bc10', [6595]]], 'kami03_233.bin': [['0210', [6595]], ['4110', [6589]], ['bc10', [6601]]], 'kami03_235.bin': [['0210', [6595]], ['3510', [6589]], ['bc10', [6601]]], 'kami03_236.bin': [['0410', [6589]], ['bc10', [6595]]], 'kami03_237.bin': [['0210', [6595]], ['4110', [6589]], ['bc10', [6601]]], 'kami03_238.bin': [['3510', [6595]], ['4110', [6589]], ['bc10', [6601]]], 'kami10_060.bin': [['1410', [4933]], ['3610', [4939]], ['a110', [4945]]], 'kami10_061.bin': [['1410', [4939]], ['3c10', [4933]], ['e910', [4945]]], 'kami10_062.bin': [['1410', [4933]], ['1a10', [4939]], ['ea10', [4945]]], 'kami10_063.bin': [['1a10', [4933, 4939]], ['a110', [4945]]], 'kami10_064.bin': [['1a10', [4939]], ['3c10', [4933]], ['e910', [4945]]], 'kami10_065.bin': [['3610', [4933]], ['ea10', [4939]]], 'kami10_066.bin': [['e610', [4933]]], 'kami10_080.bin': [['3c10', [4933, 4939]], ['a110', [4945]]], 'kami10_081.bin': [['1410', [4933, 4939]], ['e910', [4945]]], 'kami10_082.bin': [['3610', [4933, 4939]], ['ea10', [4945]]], 'kami10_083.bin': [['1410', [4939]], ['1a10', [4933]], ['a110', [4945]]], 'kami10_084.bin': [['e610', [4933]]], 'kami10_229.bin': [['7910', [4933]]], 'kami11_080.bin': [['5010', [30025, 30031]], ['e910', [30037]]], 'kami11_081.bin': [['5410', [30025, 30031]], ['a110', [30037]]], 'kami11_082.bin': [['5010', [30025]], ['5410', [30031, 30037]], ['ea10', [30043]]], 'kami11_083.bin': [['5010', [30025, 30037]], ['a110', [30043]], ['da10', [30031]]], 'kami11_084.bin': [['5410', [30025, 30037]], ['db10', [30031]], ['e910', [30043]]], 'kami11_085.bin': [['da10', [30025]], ['db10', [30031]], ['ea10', [30037]]], 'kami11_086.bin': [['a110', [30043]], ['da10', [30025, 30037]], ['db10', [30031]]], 'kami11_087.bin': [['eb10', [30025]]], 'kami11_229.bin': [['a010', [29197]], ['a110', [29203]], ['e910', [29209]], ['ea10', [29215]]], 'kino01_000.bin': [['7210', [4933]]], 'kino01_001.bin': [['0910', [4939, 4945, 4951]], ['6d10', [4933]]], 'kino01_002.bin': [['0910', [4945]], ['4110', [4939]], ['6d10', [4933]]], 'kino01_003.bin': [['4110', [4939, 4945]], ['6d10', [4933]]], 'kino01_004.bin': [['0910', [4933]], ['4110', [4939, 4945, 4951]]], 'kino01_020.bin': [['7210', [4933]]], 'kino01_021.bin': [['0910', [4939, 4945, 4951]], ['6d10', [4933]]], 'kino01_022.bin': [['0910', [4945]], ['4110', [4939]], ['6d10', [4933]]], 'kino01_023.bin': [['4110', [4939, 4945]], ['6d10', [4933]]], 'kino01_024.bin': [['0910', [4933]], ['4110', [4939, 4945, 4951]]], 'kino01_035.bin': [['bd10', [29197, 29203]], ['bf10', [29209]]], 'kino01_036.bin': [['b310', [29203, 29209]], ['bd10', [29197]]], 'kino01_040.bin': [['0e10', [4933]], ['3610', [4939]], ['e910', [4945]]], 'kino01_041.bin': [['0e10', [4933]], ['5910', [4939]], ['ea10', [4945]]], 'kino01_042.bin': [['1a10', [4933]], ['3610', [4939, 4945]], ['a110', [4951]]], 'kino01_043.bin': [['0e10', [4945]], ['e410', [4933, 4939]], ['e910', [4951]]], 'kino01_044.bin': [['df10', [4933]], ['ea10', [4939]]], 'kino01_046.bin': [['0e10', [4933]], ['3610', [4939]], ['e910', [4945]]], 'kino01_047.bin': [['0e10', [4933]], ['5910', [4939]], ['ea10', [4945]]], 'kino01_048.bin': [['1a10', [4933]], ['3610', [4939, 4945]]], 'kino01_049.bin': [['0e10', [4945]], ['e410', [4933, 4939]]], 'kino01_050.bin': [['df10', [4933]], ['ea10', [4939]]], 'kino01_095.bin': [['c110', [29209]], ['d310', [29197, 29203]]], 'kino01_096.bin': [['c110', [29197, 29203]], ['d710', [29209]]], 'kino01_218.bin': [['c110', [29197, 29203]], ['d710', [29209]]], 'kino01_219.bin': [['d210', [29197]], ['d310', [29203, 29209]]], 'kino01_220.bin': [['d310', [29209]], ['d610', [29197, 29203]]], 'kino01_221.bin': [['d310', [143191, 143197]], ['1711', [143185]]], 'kino01_222.bin': [['b810', [4933]]], 'kino01_223.bin': [['b710', [4933]], ['d210', [4939, 4945]]], 'kino01_224.bin': [['b310', [4933]], ['c010', [4939]]], 'kino01_225.bin': [['b310', [4939]], ['bf10', [4933]]], 'kino01_226.bin': [['bf10', [4939]], ['d210', [4933]]], 'kino01_227.bin': [['bd10', [4933]], ['d210', [4939]]], 'kino01_228.bin': [['ee10', [4933]]], 'kino01_229.bin': [['b910', [143197]], ['d210', [143185, 143191]]], 'kino04_000.bin': [['1710', [4933, 4939]]], 'kino04_001.bin': [['0110', [4939, 4945]], ['1710', [4933]]], 'kino04_002.bin': [['1710', [4933, 4939]], ['1f10', [4945]]], 'kino04_003.bin': [['4210', [4933]]], 'kino04_004.bin': [['0110', [4939, 4945]], ['4210', [4933]]], 'kino04_005.bin': [['0110', [4945]], ['1f10', [4933, 4939]]], 'kino04_006.bin': [['0110', [4939, 4945]], ['1f10', [4933]]], 'kino04_007.bin': [['1f10', [4933, 4939]]], 'kino04_008.bin': [['4210', [4933]]], 'kino04_009.bin': [['1f10', [4939]], ['4210', [4933]]], 'kino04_020.bin': [['1f10', [4945]], ['4210', [4933, 4939]]], 'kino04_021.bin': [['0110', [4939]], ['1710', [4933, 4945]]], 'kino04_022.bin': [['1710', [4933]], ['1f10', [4939]], ['2010', [4945]]], 'kino04_023.bin': [['8710', [4933, 4939]]], 'kino04_024.bin': [['8710', [4939]], ['8a10', [4933, 4945]]], 'kino04_025.bin': [['1710', [4945]], ['1f10', [4933]], ['2010', [4939]]], 'kino04_026.bin': [['0110', [4939, 4945]], ['2010', [4933]]], 'kino04_027.bin': [['0110', [4945]], ['1710', [4939]], ['4210', [4933]]], 'kino04_028.bin': [['8710', [4933, 4939]]], 'kino04_029.bin': [['8710', [4939]], ['8a10', [4933, 4945]]], 'kino04_035.bin': [['bd10', [4933, 4939]], ['bf10', [4945]]], 'kino04_036.bin': [['b310', [4939, 4945]], ['bd10', [4933]]], 'kino04_037.bin': [['b210', [4933, 4945]], ['bd10', [4939]]], 'kino04_038.bin': [['be10', [4933, 4939]], ['bf10', [4945]]], 'kino04_039.bin': [['b310', [4939]], ['bd10', [4933]]], 'kino04_040.bin': [['1710', [4939, 4945]], ['1a10', [4933]], ['a110', [4951]]], 'kino04_041.bin': [['1710', [4939]], ['1a10', [4933]], ['2010', [4945]], ['e910', [4951]]], 'kino04_042.bin': [['1710', [4933, 4945]], ['3810', [4939]], ['ea10', [4951]]], 'kino04_043.bin': [['e710', [4933]]], 'kino04_044.bin': [['3810', [4933]], ['a110', [4939]]], 'kino04_045.bin': [['2010', [4933, 4939, 4945]], ['a110', [4951]]], 'kino04_046.bin': [['2010', [4933, 4939]], ['4210', [4945]]], 'kino04_047.bin': [['2010', [4933]], ['3810', [4939]], ['e910', [4945]]], 'kino04_048.bin': [['e710', [4933]]], 'kino04_049.bin': [['3810', [4933]], ['4210', [4939]]], 'kino04_055.bin': [['c010', [4945]], ['d210', [4933, 4939]]], 'kino04_056.bin': [['c010', [4933]], ['d610', [4939, 4945]]], 'kino04_057.bin': [['bd10', [4933]], ['d210', [4939, 4945]]], 'kino04_058.bin': [['b310', [4933]], ['d610', [4939, 4945]]], 'kino04_059.bin': [['c010', [4933]], ['d610', [4939]]], 'kino04_080.bin': [['1a10', [4933, 4939, 4945]], ['e910', [4951]]], 'kino04_081.bin': [['1a10', [4933]], ['2010', [4945]], ['e410', [4939]], ['ea10', [4951]]], 'kino04_082.bin': [['2010', [4933]], ['3810', [4939]], ['a110', [4945]]], 'kino04_083.bin': [['1a10', [4939, 4945]], ['3810', [4933]], ['e910', [4951]]], 'kino04_084.bin': [['df10', [4933]], ['e410', [4939]], ['ea10', [4945]]], 'kino04_085.bin': [['2010', [4933, 4939, 4945, 4951]]], 'kino04_086.bin': [['2010', [4933, 4939]], ['3810', [4945]], ['a110', [4951]]], 'kino04_087.bin': [['1a10', [4939, 4945]], ['e210', [4933]], ['e910', [4951]]], 'kino04_088.bin': [['df10', [4933]], ['e210', [4939]], ['ea10', [4945]]], 'kino04_089.bin': [['e710', [4933]]], 'kino04_095.bin': [['c110', [4945]], ['d310', [4933, 4939]]], 'kino04_096.bin': [['c110', [4933, 4939]], ['d710', [4945]]], 'kino04_097.bin': [['d210', [4933]], ['d310', [4939, 4945]]], 'kino04_098.bin': [['d610', [4933]], ['d710', [4939, 4945]]], 'kino04_099.bin': [['c110', [4933]], ['d710', [4939]]], 'kino04_100.bin': [['4210', [6589]], ['bc10', [6595]]], 'kino04_101.bin': [['1710', [6589, 6595]], ['bc10', [6601]]], 'kino04_102.bin': [['1f10', [6595]], ['4210', [6589]], ['bc10', [6601]]], 'kino04_105.bin': [['4210', [6589, 6595]], ['bc10', [6601]]], 'kino04_106.bin': [['1710', [6589, 6595]], ['bc10', [6601]]], 'kino04_107.bin': [['1710', [6595]], ['4210', [6589]], ['bc10', [6601]]], 'kino04_229.bin': [['8a10', [143197]], ['f610', [143185]], ['fb10', [143191]]], 'kino04_230.bin': [['bc10', [6589]]], 'kino04_231.bin': [['4210', [6589]], ['bc10', [6595]]], 'kino04_232.bin': [['1f10', [6589]], ['bc10', [6595]]], 'kino04_233.bin': [['1710', [6589]], ['1f10', [6595]], ['bc10', [6601]]], 'kino04_235.bin': [['bc10', [6589]]], 'kino04_236.bin': [['4210', [6589, 6595]], ['bc10', [6601]]], 'kino04_237.bin': [['1f10', [6589]], ['4210', [6595]], ['bc10', [6601]]], 'kino04_238.bin': [['1710', [6589]], ['1f10', [6595]], ['bc10', [6601]]], 'kino13_080.bin': [['d510', [4933, 4939, 4945]]], 'kino13_081.bin': [['d510', [4933, 4939]]], 'kino13_082.bin': [['d510', [4933]]], 'kino13_225.bin': [['0211', [143185]]], 'kino13_226.bin': [['b110', [143185]]], 'kino13_227.bin': [['b010', [143185]]], 'kino13_228.bin': [['fe10', [4933]]], 'kino13_229.bin': [['0011', [4933]]], 'klyt00_000.bin': [['b210', [4933, 4939]]], 'klyt00_001.bin': [['b210', [4945]], ['be10', [4933, 4939]]], 'klyt00_002.bin': [['6510', [4933, 4939]]], 'klyt00_003.bin': [['6510', [4933, 4945]], ['6710', [4939]]], 'klyt00_004.bin': [['4a10', [4933]]], 'klyt00_005.bin': [['1f10', [4945]], ['4110', [4933, 4939]]], 'klyt00_006.bin': [['6c10', [4933]]], 'klyt00_040.bin': [['2010', [4933, 4939]], ['e910', [4945]]], 'klyt00_041.bin': [['2010', [4933]], ['4d10', [4939]], ['ea10', [4945]]], 'klyt00_042.bin': [['e610', [4933]]], 'klyt00_050.bin': [['6610', [4933, 4939]]], 'klyt00_051.bin': [['6610', [4945]], ['6810', [4933, 4939]]], 'klyt00_055.bin': [['d210', [4933, 4939]], ['d610', [4945]]], 'klyt00_056.bin': [['c010', [4939, 4945]], ['d610', [4933]]], 'klyt00_080.bin': [['2010', [4933, 4939]], ['a110', [4951]], ['e210', [4945]]], 'klyt00_081.bin': [['2010', [4933]], ['4d10', [4939, 4945]]], 'klyt00_082.bin': [['e610', [4933]]], 'klyt00_083.bin': [['4d10', [4933, 4945]], ['e210', [4939]], ['e910', [4951]]], 'klyt00_084.bin': [['e210', [4933, 4939]], ['ea10', [4945]]], 'klyt00_085.bin': [['a110', [4945]], ['df10', [4933, 4939]]], 'klyt00_090.bin': [['6410', [4933]], ['6810', [4939, 4945, 4951]]], 'klyt00_091.bin': [['6610', [4939]], ['6810', [4933]]], 'klyt00_092.bin': [['6610', [4945]], ['6810', [4933, 4939]]], 'klyt00_095.bin': [['d310', [4933, 4939]], ['d710', [4945]]], 'klyt00_096.bin': [['c110', [4945]], ['d710', [4933, 4939]]], 'klyt00_216.bin': [['6410', [4933]], ['6810', [4939, 4945]]], 'klyt00_217.bin': [['6410', [4933, 4939]]], 'klyt00_218.bin': [['6610', [4933, 4945]], ['6810', [4939]]], 'klyt00_219.bin': [['6610', [4933, 4939]]], 'klyt00_220.bin': [['c110', [4933, 4939]], ['d310', [4945]]], 'klyt00_221.bin': [['d310', [4939, 4945]], ['d710', [4933]]], 'klyt00_222.bin': [['6610', [4939, 4945]], ['6810', [4933]]], 'klyt00_223.bin': [['6810', [4933, 4939]]], 'klyt00_224.bin': [['c010', [4933, 4939]], ['d210', [4945]]], 'klyt00_225.bin': [['d210', [4939, 4945]], ['d610', [4933]]], 'klyt00_226.bin': [['6510', [4933, 4945]], ['6710', [4939]]], 'klyt00_227.bin': [['6510', [4933, 4939]]], 'klyt00_228.bin': [['b210', [4945]], ['be10', [4933, 4939]]], 'klyt00_229.bin': [['b210', [4933, 4939]]], 'klyt00_230.bin': [['bc10', [6589]]], 'klyt00_231.bin': [['1f10', [6589, 6595]], ['bc10', [6601]]], 'klyt00_232.bin': [['4110', [6589, 6595]], ['bc10', [6601]]], 'klyt00_233.bin': [['4a10', [6589]], ['bc10', [6595]]], 'klyt01_050.bin': [['6610', [4933]], ['6810', [4939]]], 'klyt01_051.bin': [['6610', [4933, 4939]]], 'klyt01_052.bin': [['6610', [4933, 4939]], ['6810', [4945]]], 'klyt01_221.bin': [['6610', [4933, 4939]], ['6810', [4945]]], 'klyt01_222.bin': [['6610', [4933]], ['6810', [4939]]], 'klyt01_224.bin': [['6610', [4933, 4939]], ['6810', [4945]]], 'klyt01_225.bin': [['6610', [4933]], ['6810', [4939]]], 'klyt01_226.bin': [['2f10', [4933]]], 'klyt01_228.bin': [['6510', [4933, 4939]], ['6710', [4945]]], 'klyt01_229.bin': [['6510', [4933]], ['6710', [4939]]], 'klyt11_229.bin': [['a510', [4933]]], 'klyt15_040.bin': [['7010', [4933, 4939]]], 'klyt15_041.bin': [['0610', [4939]], ['7010', [4933]]], 'klyt15_042.bin': [['3010', [4933, 4939]]], 'klyt15_228.bin': [['5b10', [29197, 29203]]], 'klyt15_229.bin': [['5b10', [4933]]], 'lchb01_229.bin': [['8510', [7837, 7843]]], 'lchb02_229.bin': [['8510', [7741, 7747]], ['8810', [7753, 7759]]], 'lchb03_228.bin': [['8310', [148153]]], 'lchb03_229.bin': [['8110', [147487]], ['8210', [147481]]], 'lchb19_229.bin': [['8510', [12595, 12601]], ['1811', [12607]]], 'maca00_000.bin': [['0110', [4933]], ['4010', [4945]], ['4110', [4939]]], 'maca00_001.bin': [['0110', [4933, 4939, 4945]]], 'maca00_002.bin': [['0110', [4933]], ['4010', [4939]]], 'maca00_003.bin': [['4010', [4933]], ['4110', [4939]]], 'maca00_004.bin': [['4010', [4933]], ['4110', [4939, 4945]]], 'maca00_020.bin': [['0110', [4933]], ['4010', [4945]], ['4110', [4939]]], 'maca00_021.bin': [['0110', [4933, 4945]], ['4110', [4939]]], 'maca00_022.bin': [['0110', [4933]], ['0310', [4939]]], 'maca00_023.bin': [['4010', [4933]], ['4110', [4939]]], 'maca00_024.bin': [['4010', [4933]], ['4110', [4939, 4945]]], 'maca00_040.bin': [['0310', [4933]], ['1310', [4939]], ['e910', [4945]]], 'maca00_041.bin': [['0310', [4933]], ['ea10', [4939]]], 'maca00_042.bin': [['0310', [4933, 4939]], ['a110', [4945]]], 'maca00_043.bin': [['1310', [4933, 4939]], ['e910', [4945]]], 'maca00_044.bin': [['4310', [4933]], ['ea10', [4939]]], 'maca00_080.bin': [['0310', [4933]], ['1310', [4939]], ['4310', [4945]], ['a110', [4951]]], 'maca00_081.bin': [['0310', [4933, 4939, 4945]], ['e910', [4951]]], 'maca00_082.bin': [['0310', [4933]], ['1310', [4939]], ['ea10', [4945]]], 'maca00_083.bin': [['1310', [4933, 4939]], ['4310', [4945]], ['a110', [4951]]], 'maca00_084.bin': [['0310', [4939]], ['4310', [4933]], ['e910', [4945]]], 'maca00_226.bin': [['0310', [4939]], ['1310', [4933]]], 'maca00_227.bin': [['0310', [4933, 4939, 4945]]], 'maca00_228.bin': [['2510', [4939]], ['4b10', [4933]]], 'mcfr00_000.bin': [['9110', [4933, 4939]]], 'mcfr00_001.bin': [['4210', [4939]], ['9110', [4933]]], 'mcfr00_002.bin': [['4110', [4939]], ['9110', [4933]]], 'mcfr00_003.bin': [['9210', [4933]]], 'mcfr00_004.bin': [['4210', [4933]], ['9310', [4939]]], 'mcfr00_005.bin': [['9e10', [4933]]], 'mcfr00_020.bin': [['9110', [4933, 4939]], ['9210', [4945]]], 'mcfr00_021.bin': [['9210', [4933, 4939, 4945]]], 'mcfr00_022.bin': [['9110', [4933]], ['9210', [4939, 4945]]], 'mcfr00_023.bin': [['9210', [4933, 4939]]], 'mcfr00_024.bin': [['4210', [4933]], ['9310', [4939]]], 'mcfr00_025.bin': [['9e10', [4933]]], 'mcfr00_040.bin': [['9210', [4933]], ['e910', [4939]]], 'mcfr00_041.bin': [['9510', [4933]], ['ea10', [4939]]], 'mcfr00_042.bin': [['9210', [4933, 4939]]], 'mcfr00_043.bin': [['1310', [4933]], ['9510', [4939]], ['a110', [4945]]], 'mcfr00_044.bin': [['1310', [4933]], ['9410', [4939]], ['e910', [4945]]], 'mcfr00_045.bin': [['9e10', [4933]], ['ea10', [4939]]], 'mcfr00_080.bin': [['9210', [4933, 4939]], ['a110', [4945]]], 'mcfr00_081.bin': [['9210', [4933]], ['9510', [4939]], ['e910', [4945]]], 'mcfr00_082.bin': [['9510', [4933]], ['e410', [4939, 4945]], ['ea10', [4951]]], 'mcfr00_083.bin': [['1310', [4939]], ['9210', [4933]], ['a110', [4945]]], 'mcfr00_084.bin': [['1310', [4933]], ['9410', [4939]], ['e910', [4945]]], 'mcfr00_085.bin': [['9e10', [4933]], ['e210', [4939]], ['ea10', [4945]]], 'mcfr00_227.bin': [['9210', [29197, 29203]]], 'mcfr00_228.bin': [['9e10', [29197]]], 'mcfr00_229.bin': [['9110', [29197, 29203]], ['9210', [29209]]], 'mcfr00_230.bin': [['bc10', [6589]]], 'mcfr00_231.bin': [['9110', [6589, 6595]], ['bc10', [6601]]], 'mcfr00_232.bin': [['9210', [6589]], ['bc10', [6595]]], 'mcfr00_233.bin': [['9310', [6589]], ['bc10', [6595]]], 'mcfr00_235.bin': [['bc10', [6589]]], 'mcfr00_236.bin': [['9110', [6589]], ['9210', [6595]], ['bc10', [6601]]], 'mcfr00_237.bin': [['9210', [6589]], ['bc10', [6595]]], 'mcfr00_238.bin': [['4210', [6595]], ['9310', [6589]], ['bc10', [6601]]], 'mcfr01_000.bin': [['4110', [4933]], ['9110', [4939]]], 'mcfr01_001.bin': [['4210', [4933]], ['9310', [4939]]], 'mcfr01_002.bin': [['4110', [4933]], ['4210', [4939]]], 'mcfr01_003.bin': [['4210', [4933]], ['9110', [4939]]], 'mcfr01_004.bin': [['4210', [4939]], ['9310', [4933]]], 'mcfr01_005.bin': [['9e10', [4933]]], 'mcfr01_020.bin': [['4110', [4933, 4939]], ['4210', [4945]]], 'mcfr01_021.bin': [['4110', [4933]], ['9310', [4939, 4945]]], 'mcfr01_022.bin': [['4110', [4933]], ['4210', [4939]]], 'mcfr01_023.bin': [['1010', [4936]], ['4210', [4933]]], 'mcfr01_024.bin': [['9110', [4939, 4945]], ['9210', [4933]]], 'mcfr01_025.bin': [['9e10', [4933]]], 'mcfr01_040.bin': [['4310', [4933, 4939]], ['a110', [4945]]], 'mcfr01_041.bin': [['1310', [4945]], ['4310', [4933, 4939]], ['e910', [4951]]], 'mcfr01_042.bin': [['4210', [4939, 4945]], ['4310', [4933]]], 'mcfr01_043.bin': [['4310', [4933]], ['9210', [4939, 4945]], ['ea10', [4951]]], 'mcfr01_044.bin': [['9410', [4933, 4939]], ['a110', [4945]]], 'mcfr01_045.bin': [['9e10', [4933]], ['9f10', [4939]], ['e910', [4945]]], 'mcfr01_080.bin': [['e210', [4933, 4939]], ['ea10', [4945]]], 'mcfr01_081.bin': [['1310', [4945]], ['4310', [4933, 4939]], ['a110', [4951]]], 'mcfr01_082.bin': [['4310', [4933, 4939, 4945]], ['e910', [4951]]], 'mcfr01_083.bin': [['4310', [4933]], ['9210', [4939, 4945]], ['ea10', [4951]]], 'mcfr01_084.bin': [['0710', [4939]], ['9410', [4933]], ['a110', [4945]]], 'mcfr01_085.bin': [['9e10', [4933, 4939]], ['e910', [4945]]], 'mcfr01_230.bin': [['bc10', [6589]]], 'mcfr01_231.bin': [['4110', [6589, 6595]], ['bc10', [6601]]], 'mcfr01_232.bin': [['4210', [6589]], ['bc10', [6595]]], 'mcfr01_233.bin': [['9310', [6589]], ['bc10', [6595]]], 'mcfr01_235.bin': [['bc10', [6589]]], 'mcfr01_236.bin': [['4110', [6589]], ['9310', [6595]], ['bc10', [6601]]], 'mcfr01_237.bin': [['4110', [6595]], ['4210', [6589]], ['bc10', [6601]]], 'mcfr01_238.bin': [['4210', [6589]], ['9310', [6595]], ['bc10', [6601]]], 'mcfr02_000.bin': [['9310', [4933, 4939]]], 'mcfr02_001.bin': [['9310', [4933]]], 'mcfr02_002.bin': [['4110', [4939]], ['9310', [4933]]], 'mcfr02_003.bin': [['4210', [4939]], ['9310', [4933]]], 'mcfr02_004.bin': [['4210', [4933]], ['9210', [4939]]], 'mcfr02_005.bin': [['9e10', [4933]]], 'mcfr02_020.bin': [['9310', [4933, 4939, 4945]]], 'mcfr02_021.bin': [['9310', [4933, 4939]]], 'mcfr02_022.bin': [['4110', [4939, 4945]], ['9310', [4933]]], 'mcfr02_023.bin': [['4210', [4939, 4945]], ['9310', [4933]]], 'mcfr02_024.bin': [['4210', [4933]], ['9210', [4939]]], 'mcfr02_025.bin': [['9e10', [4933]]], 'mcfr02_040.bin': [['9410', [4933]], ['ea10', [4939]]], 'mcfr02_041.bin': [['1310', [4939]], ['9410', [4933]], ['a110', [4945]]], 'mcfr02_042.bin': [['4210', [4939, 4945]], ['9410', [4933]]], 'mcfr02_043.bin': [['1310', [4939]], ['9410', [4933]], ['e910', [4945]]], 'mcfr02_044.bin': [['4310', [4933, 4939]], ['9210', [4945]], ['ea10', [4951]]], 'mcfr02_045.bin': [['9e10', [4933]], ['a110', [4939]]], 'mcfr02_080.bin': [['0710', [4939]], ['9410', [4933]], ['e910', [4945]]], 'mcfr02_081.bin': [['1310', [4939]], ['9410', [4933]], ['ea10', [4945]]], 'mcfr02_082.bin': [['9410', [4933, 4939]], ['a110', [4945]]], 'mcfr02_083.bin': [['0710', [4939]], ['9410', [4933]], ['e910', [4945]]], 'mcfr02_084.bin': [['1310', [4945]], ['4310', [4933, 4939]], ['ea10', [4951]]], 'mcfr02_085.bin': [['9e10', [4933]], ['a110', [4939]]], 'mcfr02_230.bin': [['bc10', [6589]]], 'mcfr02_231.bin': [['9310', [6589]], ['bc10', [6595]]], 'mcfr02_232.bin': [['4110', [6589, 6595]], ['bc10', [6601]]], 'mcfr02_233.bin': [['9210', [6589]], ['bc10', [6595]]], 'mcfr02_235.bin': [['bc10', [6589]]], 'mcfr02_236.bin': [['9310', [6589, 6595]], ['bc10', [6601]]], 'mcfr02_237.bin': [['4110', [6595]], ['9310', [6589]], ['bc10', [6601]]], 'mcfr02_238.bin': [['4110', [6595]], ['9210', [6589]], ['bc10', [6601]]], 'mihn00_000.bin': [['2a10', [4933]]], 'mihn00_001.bin': [['5510', [4933]]], 'mihn00_002.bin': [['0a10', [4933, 4939, 4945]]], 'mihn00_003.bin': [['0a10', [4933, 4939]], ['2710', [4945]]], 'mihn00_004.bin': [['0a10', [4933]], ['1210', [4939]]], 'mihn00_005.bin': [['0a10', [4933]], ['1c10', [4939, 4945]]], 'mihn00_006.bin': [['2a10', [4933]]], 'mihn00_007.bin': [['5510', [4933]]], 'mihn00_008.bin': [['0a10', [4933, 4939, 4945]]], 'mihn00_009.bin': [['0a10', [4933, 4939]], ['2710', [4945]]], 'mihn00_010.bin': [['0a10', [4933]], ['1210', [4939]]], 'mihn00_011.bin': [['0a10', [4933]], ['1c10', [4939, 4945]]], 'mihn00_020.bin': [['2a10', [4933]]], 'mihn00_021.bin': [['5510', [4933]]], 'mihn00_022.bin': [['0a10', [4933, 4939, 4945, 4951]]], 'mihn00_023.bin': [['0a10', [4933, 4939]], ['1210', [4945]]], 'mihn00_024.bin': [['0a10', [4933]], ['1210', [4939]], ['2710', [4945]]], 'mihn00_025.bin': [['0a10', [4933]], ['1c10', [4939]], ['1d10', [4945]]], 'mihn00_026.bin': [['2a10', [4933]]], 'mihn00_027.bin': [['5510', [4933]]], 'mihn00_028.bin': [['0a10', [4933, 4939, 4945, 4951]]], 'mihn00_029.bin': [['0a10', [4933, 4939]], ['1210', [4945]]], 'mihn00_030.bin': [['0a10', [4933]], ['1210', [4939]], ['2710', [4945]]], 'mihn00_031.bin': [['0a10', [4933]], ['1c10', [4939]], ['1d10', [4945]]], 'mihn00_040.bin': [['0310', [4933, 4939]], ['a110', [4945]]], 'mihn00_041.bin': [['0310', [4933, 4945]], ['1d10', [4939]], ['e910', [4951]]], 'mihn00_042.bin': [['0310', [4933]], ['2910', [4939]], ['ea10', [4945]]], 'mihn00_043.bin': [['2b10', [4933]]], 'mihn00_044.bin': [['4e10', [4939]], ['5210', [4933]], ['a110', [4945]]], 'mihn00_045.bin': [['4e10', [4933, 4939]], ['e910', [4945]]], 'mihn00_046.bin': [['0310', [4933, 4939]], ['a110', [4945]]], 'mihn00_047.bin': [['0310', [4933, 4945]], ['1d10', [4939]], ['e910', [4951]]], 'mihn00_048.bin': [['0310', [4933]], ['2910', [4939]], ['ea10', [4945]]], 'mihn00_049.bin': [['2b10', [4933]]], 'mihn00_050.bin': [['4e10', [4939]], ['5210', [4933]], ['a110', [4945]]], 'mihn00_051.bin': [['4e10', [4933, 4939]], ['e910', [4945]]], 'mihn00_080.bin': [['0310', [4933, 4939]], ['ea10', [4945]]], 'mihn00_081.bin': [['0310', [4933, 4945]], ['1d10', [4939]], ['a110', [4951]]], 'mihn00_082.bin': [['0310', [4945]], ['2910', [4933]], ['e410', [4939]], ['e910', [4951]]], 'mihn00_083.bin': [['2b10', [4933]]], 'mihn00_084.bin': [['0310', [4939]], ['e410', [4933]], ['ea10', [4945]]], 'mihn00_085.bin': [['a110', [4939]], ['e110', [4933]]], 'mihn00_086.bin': [['0310', [4933, 4939]], ['ea10', [4945]]], 'mihn00_087.bin': [['0310', [4933, 4945]], ['1d10', [4939]], ['a110', [4951]]], 'mihn00_088.bin': [['0310', [4945]], ['2910', [4933]], ['e410', [4939]], ['e910', [4951]]], 'mihn00_089.bin': [['2b10', [4933]]], 'mihn00_090.bin': [['0310', [4939]], ['e410', [4933]], ['ea10', [4945]]], 'mihn00_091.bin': [['a110', [4939]], ['e110', [4933]]], 'mihn00_228.bin': [['4e10', [4933, 4939, 4945]]], 'mihn00_229.bin': [['5210', [4933, 4939]]], 'mihn04_000.bin': [['5510', [4933]]], 'mihn04_001.bin': [['0a10', [4939]], ['3310', [4933]]], 'mihn04_002.bin': [['0a10', [4939, 4945]], ['6d10', [4933]]], 'mihn04_003.bin': [['1210', [4939]], ['6d10', [4933]]], 'mihn04_004.bin': [['0a10', [4939]], ['2410', [4933]]], 'mihn04_006.bin': [['5510', [4933]]], 'mihn04_007.bin': [['0a10', [4939]], ['3310', [4933]]], 'mihn04_008.bin': [['0a10', [4939, 4945]], ['6d10', [4933]]], 'mihn04_009.bin': [['1210', [4939]], ['6d10', [4933]]], 'mihn04_010.bin': [['0a10', [4939]], ['2410', [4933]]], 'mihn04_020.bin': [['5510', [4933]]], 'mihn04_021.bin': [['0a10', [4939]], ['3310', [4945]], ['6d10', [4933]]], 'mihn04_022.bin': [['0a10', [4945, 4951]], ['6d10', [4933, 4939]]], 'mihn04_023.bin': [['1210', [4939]], ['6d10', [4933]]], 'mihn04_024.bin': [['1210', [4939]], ['2410', [4933]]], 'mihn04_026.bin': [['5510', [4933]]], 'mihn04_027.bin': [['0a10', [4939]], ['3310', [4945]], ['6d10', [4933]]], 'mihn04_028.bin': [['0a10', [4945, 4951]], ['6d10', [4933, 4939]]], 'mihn04_029.bin': [['1210', [4939]], ['6d10', [4933]]], 'mihn04_030.bin': [['1210', [4939]], ['2410', [4933]]], 'mihn04_040.bin': [['1d10', [4939]], ['6e10', [4933]], ['ea10', [4945]]], 'mihn04_041.bin': [['1410', [4939]], ['6e10', [4933]], ['a110', [4945]]], 'mihn04_042.bin': [['2910', [4939]], ['6e10', [4933]], ['e910', [4945]]], 'mihn04_043.bin': [['4e10', [4933]], ['5210', [4939]], ['ea10', [4945]]], 'mihn04_044.bin': [['4e10', [4933, 4939]], ['a110', [4945]]], 'mihn04_046.bin': [['1d10', [4939]], ['6e10', [4933]], ['ea10', [4945]]], 'mihn04_047.bin': [['1410', [4939]], ['6e10', [4933]], ['a110', [4945]]], 'mihn04_048.bin': [['2910', [4939]], ['6e10', [4933]], ['e910', [4945]]], 'mihn04_049.bin': [['4e10', [4933]], ['5210', [4939]], ['ea10', [4945]]], 'mihn04_050.bin': [['4e10', [4933, 4939]], ['a110', [4945]]], 'mihn04_080.bin': [['1d10', [4945]], ['6e10', [4933, 4939]], ['e910', [4951]]], 'mihn04_081.bin': [['1410', [4939]], ['6e10', [4933]], ['ea10', [4945]]], 'mihn04_082.bin': [['2910', [4939]], ['6e10', [4933]], ['a110', [4945]]], 'mihn04_083.bin': [['e410', [4933, 4939]], ['e910', [4945]]], 'mihn04_084.bin': [['e110', [4933]], ['ea10', [4939]]], 'mihn04_086.bin': [['1d10', [4945]], ['6e10', [4933, 4939]], ['e910', [4951]]], 'mihn04_087.bin': [['1410', [4939]], ['6e10', [4933]], ['ea10', [4945]]], 'mihn04_088.bin': [['2910', [4939]], ['6e10', [4933]], ['a110', [4945]]], 'mihn04_089.bin': [['e410', [4933, 4939]], ['e910', [4945]]], 'mihn04_090.bin': [['e110', [4933]], ['ea10', [4939]]], 'mihn04_226.bin': [['4e10', [4939]], ['5210', [4933]]], 'mihn04_227.bin': [['4e10', [4933, 4939, 4945]]], 'mihn04_228.bin': [['5210', [4933, 4939]]], 'mihn04_229.bin': [['9910', [4933]]], 'mihn05_000.bin': [['5510', [4933]]], 'mihn05_001.bin': [['0a10', [4939, 4945]], ['2410', [4933]]], 'mihn05_002.bin': [['2410', [4933]], ['3310', [4939]]], 'mihn05_003.bin': [['1210', [4939]], ['2410', [4933]]], 'mihn05_004.bin': [['1210', [4939]], ['6d10', [4933]]], 'mihn05_020.bin': [['5510', [4933]]], 'mihn05_021.bin': [['2410', [4933, 4939]]], 'mihn05_022.bin': [['2410', [4933]], ['3310', [4939]]], 'mihn05_023.bin': [['0a10', [4939]], ['2410', [4933]], ['6d10', [4945]]], 'mihn05_024.bin': [['0a10', [4945]], ['1210', [4939]], ['6d10', [4933]]], 'mihn05_040.bin': [['1410', [4939]], ['4d10', [4933]], ['a110', [4945]]], 'mihn05_041.bin': [['1d10', [4939]], ['4d10', [4933]], ['e910', [4945]]], 'mihn05_042.bin': [['2910', [4939]], ['4d10', [4933]], ['ea10', [4945]]], 'mihn05_043.bin': [['4e10', [4933]], ['5210', [4939]], ['a110', [4945]]], 'mihn05_044.bin': [['5210', [4933, 4939]], ['e910', [4945]]], 'mihn05_080.bin': [['1410', [4939]], ['4d10', [4933]], ['ea10', [4945]]], 'mihn05_081.bin': [['4d10', [4933, 4939]], ['a110', [4945]]], 'mihn05_082.bin': [['2910', [4939]], ['4d10', [4933]], ['e910', [4945]]], 'mihn05_083.bin': [['e410', [4933, 4939]], ['ea10', [4945]]], 'mihn05_084.bin': [['a110', [4939]], ['e110', [4933]]], 'mihn05_227.bin': [['4e10', [4939]], ['5210', [4933]]], 'mihn05_228.bin': [['4e10', [4933, 4939, 4945]]], 'mihn05_229.bin': [['5210', [4933, 4939]]], 'mihn07_000.bin': [['2a10', [4933]]], 'mihn07_001.bin': [['5510', [4933]]], 'mihn07_002.bin': [['1c10', [4933, 4939, 4945]]], 'mihn07_003.bin': [['1210', [4939]], ['1c10', [4933]]], 'mihn07_004.bin': [['0a10', [4945]], ['1c10', [4933]], ['2710', [4939]]], 'mihn07_005.bin': [['1210', [4933]], ['2710', [4939]]], 'mihn07_006.bin': [['2a10', [4933]]], 'mihn07_007.bin': [['5510', [4933]]], 'mihn07_008.bin': [['1c10', [4933, 4939, 4945]]], 'mihn07_009.bin': [['1210', [4939]], ['1c10', [4933]]], 'mihn07_010.bin': [['0a10', [4945]], ['1c10', [4933]], ['2710', [4939]]], 'mihn07_011.bin': [['1210', [4933]], ['2710', [4939]]], 'mihn07_020.bin': [['2a10', [4933]]], 'mihn07_021.bin': [['5510', [4933]]], 'mihn07_022.bin': [['1d10', [4933, 4939]]], 'mihn07_023.bin': [['0a10', [4945]], ['1210', [4939]], ['1c10', [4933]]], 'mihn07_024.bin': [['0a10', [4945]], ['1c10', [4933]], ['2710', [4939]]], 'mihn07_025.bin': [['1210', [4933]], ['2710', [4939]]], 'mihn07_026.bin': [['2a10', [4933]]], 'mihn07_027.bin': [['5510', [4933]]], 'mihn07_028.bin': [['1d10', [4933, 4939]]], 'mihn07_029.bin': [['0a10', [4945]], ['1210', [4939]], ['1c10', [4933]]], 'mihn07_030.bin': [['0a10', [4945]], ['1c10', [4933]], ['2710', [4939]]], 'mihn07_031.bin': [['1210', [4933]], ['2710', [4939]]], 'mihn07_040.bin': [['1d10', [4933]], ['2910', [4939]], ['e910', [4945]]], 'mihn07_041.bin': [['1410', [4939]], ['1d10', [4933]], ['ea10', [4945]]], 'mihn07_042.bin': [['0310', [4939, 4945]], ['1d10', [4933]]], 'mihn07_043.bin': [['2b10', [4933]]], 'mihn07_044.bin': [['4e10', [4933, 4945]], ['5210', [4939]], ['a110', [4951]]], 'mihn07_045.bin': [['4e10', [4945]], ['5210', [4933, 4939]], ['e910', [4951]]], 'mihn07_046.bin': [['1d10', [4933]], ['2910', [4939]], ['e910', [4945]]], 'mihn07_047.bin': [['1410', [4939]], ['1d10', [4933]], ['ea10', [4945]]], 'mihn07_048.bin': [['0310', [4939, 4945]], ['1d10', [4933]]], 'mihn07_049.bin': [['2b10', [4933]]], 'mihn07_050.bin': [['4e10', [4933, 4945]], ['5210', [4939]], ['a110', [4951]]], 'mihn07_051.bin': [['4e10', [4945]], ['5210', [4933, 4939]], ['e910', [4951]]], 'mihn07_080.bin': [['1d10', [4933, 4939]], ['ea10', [4945]]], 'mihn07_081.bin': [['1410', [4939]], ['1d10', [4933]], ['a110', [4945]]], 'mihn07_082.bin': [['0310', [4933, 4939]], ['1d10', [4945]]], 'mihn07_083.bin': [['2b10', [4933]]], 'mihn07_084.bin': [['e410', [4933, 4939]], ['e910', [4945]]], 'mihn07_085.bin': [['e110', [4933]], ['ea10', [4939]]], 'mihn07_086.bin': [['1d10', [4933, 4939]], ['ea10', [4945]]], 'mihn07_087.bin': [['1410', [4939]], ['1d10', [4933]], ['a110', [4945]]], 'mihn07_088.bin': [['0310', [4933, 4939]], ['1d10', [4945]]], 'mihn07_089.bin': [['2b10', [4933]]], 'mihn07_090.bin': [['e410', [4933, 4939]], ['e910', [4945]]], 'mihn07_091.bin': [['e110', [4933]], ['ea10', [4939]]], 'mihn07_229.bin': [['4e10', [4939]], ['5210', [4933]]], 'mihn08_000.bin': [['2a10', [4933]]], 'mihn08_001.bin': [['1210', [4933, 4939]]], 'mihn08_002.bin': [['0a10', [4939]], ['1210', [4933]]], 'mihn08_003.bin': [['1210', [4933]], ['1c10', [4939]]], 'mihn08_004.bin': [['0a10', [4945]], ['1210', [4933]], ['1c10', [4939]]], 'mihn08_005.bin': [['2710', [4933, 4939]]], 'mihn08_006.bin': [['2a10', [4933]]], 'mihn08_007.bin': [['1210', [4933, 4939]]], 'mihn08_008.bin': [['0a10', [4939]], ['1210', [4933]]], 'mihn08_009.bin': [['1210', [4933]], ['1c10', [4939]]], 'mihn08_010.bin': [['0a10', [4945]], ['1210', [4933]], ['1c10', [4939]]], 'mihn08_011.bin': [['2710', [4933, 4939]]], 'mihn08_020.bin': [['2a10', [4933]]], 'mihn08_021.bin': [['0a10', [4933]], ['1210', [4939, 4945]]], 'mihn08_022.bin': [['0a10', [4945]], ['1210', [4939]], ['1d10', [4933]]], 'mihn08_023.bin': [['1210', [4933, 4939]]], 'mihn08_024.bin': [['1c10', [4939]], ['1d10', [4933]]], 'mihn08_025.bin': [['2710', [4933, 4939]]], 'mihn08_026.bin': [['2a10', [4933]]], 'mihn08_027.bin': [['0a10', [4933]], ['1210', [4939, 4945]]], 'mihn08_028.bin': [['0a10', [4945]], ['1210', [4939]], ['1d10', [4933]]], 'mihn08_029.bin': [['1210', [4933, 4939]]], 'mihn08_030.bin': [['1c10', [4939]], ['1d10', [4933]]], 'mihn08_031.bin': [['2710', [4933, 4939]]], 'mihn08_040.bin': [['1410', [4933]], ['2910', [4939]], ['a110', [4945]]], 'mihn08_041.bin': [['1410', [4933, 4939]], ['e910', [4945]]], 'mihn08_042.bin': [['0310', [4939]], ['1410', [4933]], ['ea10', [4945]]], 'mihn08_043.bin': [['2b10', [4933]]], 'mihn08_044.bin': [['4e10', [4939]], ['5210', [4933]], ['a110', [4945]]], 'mihn08_045.bin': [['5210', [4933, 4939]], ['e910', [4945]]], 'mihn08_046.bin': [['1410', [4933]], ['2910', [4939]], ['a110', [4945]]], 'mihn08_047.bin': [['1410', [4933, 4939]], ['e910', [4945]]], 'mihn08_048.bin': [['0310', [4939]], ['1410', [4933]], ['ea10', [4945]]], 'mihn08_049.bin': [['2b10', [4933]]], 'mihn08_050.bin': [['4e10', [4939]], ['5210', [4933]], ['a110', [4945]]], 'mihn08_051.bin': [['5210', [4933, 4939]], ['e910', [4945]]], 'mihn08_080.bin': [['1410', [4933]], ['2910', [4939]], ['ea10', [4945]]], 'mihn08_081.bin': [['1410', [4933]], ['1d10', [4939]], ['a110', [4945]]], 'mihn08_082.bin': [['0310', [4939]], ['1410', [4933]], ['e910', [4945]]], 'mihn08_083.bin': [['2b10', [4933]]], 'mihn08_084.bin': [['e410', [4933, 4939]], ['ea10', [4945]]], 'mihn08_085.bin': [['a110', [4939]], ['e110', [4933]]], 'mihn08_086.bin': [['1410', [4933]], ['2910', [4939]], ['ea10', [4945]]], 'mihn08_087.bin': [['1410', [4933]], ['1d10', [4939]], ['a110', [4945]]], 'mihn08_088.bin': [['0310', [4939]], ['1410', [4933]], ['e910', [4945]]], 'mihn08_089.bin': [['2b10', [4933]]], 'mihn08_090.bin': [['e410', [4933, 4939]], ['ea10', [4945]]], 'mihn08_091.bin': [['a110', [4939]], ['e110', [4933]]], 'mihn08_227.bin': [['4e10', [4939]], ['5210', [4933]]], 'mihn08_228.bin': [['4e10', [4939]], ['5210', [4933]]], 'mihn08_229.bin': [['4e10', [4933, 4939, 4945]]], 'mihn09_080.bin': [['7e10', [4933, 4939, 4945]]], 'mihn09_081.bin': [['7e10', [4933]], ['7f10', [4939]]], 'mihn09_082.bin': [['7e10', [4933, 4939]], ['7f10', [4945]]], 'mihn09_083.bin': [['7f10', [4933, 4939]]], 'mihn09_084.bin': [['7f10', [4933, 4939, 4945]]], 'mihn09_085.bin': [['7f10', [4933, 4939, 4945]]], 'mihn09_086.bin': [['7f10', [4933]], ['d910', [4939]]], 'mihn09_087.bin': [['7f10', [4933, 4939]], ['d910', [4945]]], 'mihn09_088.bin': [['d910', [4933, 4939]]], 'mihn09_089.bin': [['d910', [4933, 4939, 4945]]], 'mihn09_224.bin': [['1611', [4933]]], 'mihn09_225.bin': [['7e10', [4933, 4939, 4945]]], 'mihn09_226.bin': [['7e10', [4933]], ['7f10', [4939, 4945]]], 'mihn09_227.bin': [['7f10', [4933, 4939]], ['d910', [4945]]], 'mihn09_228.bin': [['d910', [4933, 4939, 4945]]], 'mihn09_229.bin': [['8010', [4933]]], 'mtgz01_000.bin': [['2310', [4933, 4939]]], 'mtgz01_001.bin': [['2410', [4933, 4939]]], 'mtgz01_002.bin': [['0c10', [4939, 4945]], ['2310', [4933]]], 'mtgz01_003.bin': [['0c10', [4933]], ['4610', [4939]]], 'mtgz01_004.bin': [['4610', [4933, 4939]]], 'mtgz01_020.bin': [['2310', [4933]], ['2410', [4939]]], 'mtgz01_021.bin': [['2410', [4933, 4939]]], 'mtgz01_022.bin': [['0c10', [4939, 4945]], ['2410', [4933]]], 'mtgz01_023.bin': [['2310', [4933]], ['4610', [4939]]], 'mtgz01_024.bin': [['4610', [4933, 4939]]], 'mtgz01_040.bin': [['2610', [4933]], ['a110', [4939]]], 'mtgz01_041.bin': [['0510', [4939]], ['2610', [4933]], ['e910', [4945]]], 'mtgz01_042.bin': [['0510', [4933]], ['2210', [4939]], ['ea10', [4945]]], 'mtgz01_043.bin': [['3810', [4933]], ['a110', [4939]]], 'mtgz01_044.bin': [['5710', [4933]], ['e910', [4939]]], 'mtgz01_080.bin': [['2610', [4933, 4939]], ['ea10', [4945]]], 'mtgz01_081.bin': [['0510', [4939, 4945]], ['2610', [4933]], ['a110', [4951]]], 'mtgz01_082.bin': [['0510', [4933]], ['2210', [4939, 4945]], ['e910', [4951]]], 'mtgz01_083.bin': [['2610', [4939]], ['3810', [4933]], ['ea10', [4945]]], 'mtgz01_084.bin': [['5710', [4933]], ['a110', [4939]]], 'mtgz06_000.bin': [['4a10', [4933]]], 'mtgz06_001.bin': [['0c10', [4939, 4945]], ['1210', [4933]]], 'mtgz06_002.bin': [['0210', [4933, 4939]], ['1210', [4945]]], 'mtgz06_003.bin': [['4a10', [4933]]], 'mtgz06_004.bin': [['4610', [4933, 4939]]], 'mtgz06_020.bin': [['4a10', [4933, 4939]]], 'mtgz06_021.bin': [['1210', [4933, 4939]]], 'mtgz06_022.bin': [['0210', [4933, 4939]], ['1210', [4945]]], 'mtgz06_023.bin': [['1210', [4939]], ['4a10', [4933]]], 'mtgz06_024.bin': [['4610', [4933, 4939]]], 'mtgz06_040.bin': [['0e10', [4933, 4939, 4945]], ['e910', [4951]]], 'mtgz06_041.bin': [['0e10', [4933]], ['3810', [4939]], ['ea10', [4945]]], 'mtgz06_042.bin': [['0510', [4933, 4945]], ['6e10', [4939]], ['a110', [4951]]], 'mtgz06_043.bin': [['0210', [4939, 4945, 4951]], ['0510', [4933]]], 'mtgz06_044.bin': [['5710', [4933]], ['e910', [4939]]], 'mtgz06_080.bin': [['0e10', [4933, 4939, 4945]], ['ea10', [4951]]], 'mtgz06_081.bin': [['0e10', [4933]], ['3810', [4939]], ['a110', [4945]]], 'mtgz06_082.bin': [['0510', [4933, 4945]], ['6e10', [4939]], ['e910', [4951]]], 'mtgz06_083.bin': [['0510', [4933, 4939, 4945]], ['ea10', [4951]]], 'mtgz06_084.bin': [['5710', [4933]], ['a110', [4939]]], 'mtgz10_000.bin': [['0c10', [4933, 4939]], ['2310', [4945]]], 'mtgz10_001.bin': [['0c10', [4933, 4939]], ['6d10', [4945]]], 'mtgz10_002.bin': [['0c10', [4939]], ['1210', [4933]]], 'mtgz10_003.bin': [['1210', [4933, 4939]]], 'mtgz10_004.bin': [['4610', [4933]]], 'mtgz10_020.bin': [['0c10', [4933, 4939]], ['2310', [4945]]], 'mtgz10_021.bin': [['0c10', [4933, 4939]], ['6d10', [4945]]], 'mtgz10_022.bin': [['1210', [4933]], ['4610', [4939]]], 'mtgz10_023.bin': [['1210', [4933, 4939]]], 'mtgz10_024.bin': [['2310', [4933]], ['4610', [4939]]], 'mtgz10_040.bin': [['2210', [4933]], ['3810', [4939]]], 'mtgz10_041.bin': [['2210', [4933, 4939, 4945]], ['e910', [4951]]], 'mtgz10_042.bin': [['2610', [4933]], ['ea10', [4939]]], 'mtgz10_043.bin': [['3810', [4933]], ['a110', [4939]]], 'mtgz10_044.bin': [['0510', [4939]], ['3810', [4933]], ['e910', [4945]]], 'mtgz10_080.bin': [['0510', [4933]], ['3810', [4939]]], 'mtgz10_081.bin': [['2210', [4933, 4939, 4945]], ['ea10', [4951]]], 'mtgz10_082.bin': [['2210', [4933, 4939]], ['2610', [4945]], ['a110', [4951]]], 'mtgz10_083.bin': [['2210', [4945]], ['3810', [4933, 4939]], ['e910', [4951]]], 'mtgz10_084.bin': [['0510', [4939, 4945]], ['3810', [4933]], ['ea10', [4951]]], 'mtgz10_228.bin': [['b510', [29197, 29203]], ['b610', [29209]]], 'mtgz10_229.bin': [['b510', [143185]], ['b610', [143191]]], 'mtgz12_040.bin': [['3610', [4933]]], 'mtgz12_041.bin': [['8410', [4933]]], 'mtgz12_042.bin': [['2810', [4933, 4939]], ['e910', [4945]]], 'mtgz12_043.bin': [['2810', [4939]], ['3410', [4933]], ['ea10', [4945]]], 'mtgz12_044.bin': [['3410', [4933]], ['a110', [4939]]], 'mtgz12_080.bin': [['3410', [4939]], ['3610', [4933]]], 'mtgz12_081.bin': [['8410', [4933]]], 'mtgz12_082.bin': [['2810', [4933, 4939]], ['e910', [4945]]], 'mtgz12_083.bin': [['2810', [4939]], ['3410', [4933]], ['ea10', [4945]]], 'mtgz12_084.bin': [['3410', [4933, 4939]], ['a110', [4945]]], 'mtgz12_100.bin': [['2310', [4933]], ['6010', [4939]]], 'mtgz12_101.bin': [['1c10', [4939, 4945]], ['2310', [4933]]], 'mtgz12_102.bin': [['2310', [4933]], ['3f10', [4939]]], 'mtgz12_103.bin': [['1c10', [4933, 4939]]], 'mtgz12_104.bin': [['2310', [4933]], ['6010', [4939]]], 'mtgz12_105.bin': [['7b10', [29203]], ['8510', [29197, 29209]]], 'mtgz12_106.bin': [['7b10', [29203, 29209]], ['8810', [29197]]], 'mtgz12_227.bin': [['7b10', [4939, 4945, 4951]], ['8810', [4933]]], 'mtgz12_228.bin': [['7b10', [4939, 4951]], ['8510', [4933, 4945]]], 'mtgz12_229.bin': [['f110', [144457]], ['f710', [144463]], ['fc10', [144469]]], 'mtgz13_020.bin': [['1110', [4933]], ['2410', [4939]], ['0011', [4930]]], 'mtgz13_021.bin': [['0c10', [4939]], ['2410', [4933]]], 'mtgz13_022.bin': [['0c10', [4933, 4939, 4945]]], 'mtgz13_023.bin': [['7d10', [4945]], ['8710', [4933, 4939]]], 'mtgz13_024.bin': [['7d10', [4939]], ['8710', [4933]]], 'mtgz13_040.bin': [['0e10', [4933, 4939]], ['a110', [4945]]], 'mtgz13_041.bin': [['3710', [4933]]], 'mtgz13_042.bin': [['0e10', [4939]], ['2210', [4933, 4945]], ['e910', [4951]]], 'mtgz13_043.bin': [['0e10', [4933, 4939]], ['6e10', [4945]], ['ea10', [4951]]], 'mtgz13_044.bin': [['2210', [4933, 4945]], ['6e10', [4939]], ['a110', [4951]]], 'mtgz13_080.bin': [['0e10', [4933, 4939, 4945]], ['e910', [4951]]], 'mtgz13_081.bin': [['3710', [4933]], ['6e10', [4939, 4945]]], 'mtgz13_082.bin': [['0e10', [4939]], ['2210', [4933, 4945]], ['ea10', [4951]]], 'mtgz13_083.bin': [['0e10', [4933, 4939]], ['6e10', [4945]], ['a110', [4951]]], 'mtgz13_084.bin': [['2210', [4933, 4945]], ['6e10', [4939]], ['e910', [4951]]], 'mtgz13_228.bin': [['7d10', [4945]], ['8a10', [4933, 4939]]], 'mtgz13_229.bin': [['f210', [143185]]], 'mtgz14_040.bin': [['4d10', [4933]], ['e910', [4939]]], 'mtgz14_041.bin': [['3410', [4939]], ['4b10', [4933]], ['ea10', [4945]]], 'mtgz14_042.bin': [['5a10', [4933]]], 'mtgz14_043.bin': [['3410', [4933]], ['4d10', [4939]], ['a110', [4945]]], 'mtgz14_044.bin': [['4b10', [4939]], ['4d10', [4933]], ['e910', [4945]]], 'mtgz14_080.bin': [['4d10', [4933, 4939]], ['ea10', [4945]]], 'mtgz14_081.bin': [['3410', [4939]], ['4b10', [4933]], ['a110', [4945]]], 'mtgz14_082.bin': [['5a10', [4933]]], 'mtgz14_083.bin': [['3410', [4933]], ['4d10', [4939]], ['e910', [4945]]], 'mtgz14_084.bin': [['4b10', [4939]], ['4d10', [4933]], ['ea10', [4945]]], 'mtgz14_100.bin': [['3310', [4933]]], 'mtgz14_101.bin': [['3f10', [4939, 4945]], ['6010', [4933]]], 'mtgz14_102.bin': [['3310', [4933]], ['3f10', [4939]]], 'mtgz14_103.bin': [['7b10', [4939]], ['8510', [4933, 4945]]], 'mtgz14_104.bin': [['7b10', [4939, 4945]], ['8810', [4933]]], 'mtgz16_020.bin': [['2a10', [4933]]], 'mtgz16_021.bin': [['0c10', [4933, 4945]], ['2410', [4939]]], 'mtgz16_022.bin': [['0c10', [4939, 4945]], ['2410', [4933]]], 'mtgz16_023.bin': [['7d10', [4951]], ['8710', [4933, 4939, 4945]]], 'mtgz16_024.bin': [['7d10', [4939, 4945]], ['8710', [4933]]], 'mtgz16_040.bin': [['0e10', [4933, 4939, 4945]], ['ea10', [4951]]], 'mtgz16_041.bin': [['e710', [4933]]], 'mtgz16_042.bin': [['2210', [4933, 4939]], ['a110', [4945]]], 'mtgz16_043.bin': [['0e10', [4933, 4939]], ['6e10', [4945]], ['e910', [4951]]], 'mtgz16_044.bin': [['2210', [4933, 4945]], ['6e10', [4939]], ['ea10', [4951]]], 'mtgz16_080.bin': [['0e10', [4933, 4939, 4945]], ['a110', [4951]]], 'mtgz16_081.bin': [['e710', [4933]]], 'mtgz16_082.bin': [['2210', [4933, 4939, 4945]], ['e910', [4951]]], 'mtgz16_083.bin': [['0e10', [4933, 4939]], ['6e10', [4945]], ['ea10', [4951]]], 'mtgz16_084.bin': [['2210', [4933, 4945]], ['6e10', [4939]], ['a110', [4951]]], 'mtgz17_229.bin': [['8410', [4933]]], 'nagi00_000.bin': [['1c10', [4933, 4939, 4945]]], 'nagi00_001.bin': [['0a10', [4945]], ['1c10', [4933, 4939]]], 'nagi00_002.bin': [['2310', [4933]], ['3210', [4939]]], 'nagi00_003.bin': [['2310', [4933]], ['4c10', [4939]]], 'nagi00_004.bin': [['4c10', [4933]]], 'nagi00_005.bin': [['0a10', [4933]], ['4c10', [4939]]], 'nagi00_007.bin': [['0a10', [4945]], ['1f10', [4933, 4939]]], 'nagi00_008.bin': [['1f10', [4933]], ['3210', [4939]]], 'nagi00_009.bin': [['3210', [4933, 4939]]], 'nagi00_010.bin': [['0a10', [4939]], ['3210', [4933]]], 'nagi00_011.bin': [['1c10', [4939]], ['2310', [4933]]], 'nagi00_013.bin': [['9e10', [4933]]], 'nagi00_014.bin': [['0a10', [4933, 4939]], ['1f10', [4945]]], 'nagi00_015.bin': [['0a10', [4933, 4939]], ['2310', [4945]]], 'nagi00_016.bin': [['4c10', [4933]]], 'nagi00_017.bin': [['0a10', [4939]], ['4c10', [4933]]], 'nagi00_020.bin': [['1c10', [4933, 4939, 4945]]], 'nagi00_021.bin': [['1c10', [4933, 4939]], ['1d10', [4945]]], 'nagi00_022.bin': [['2310', [4933]], ['3210', [4939]]], 'nagi00_023.bin': [['2310', [4933]], ['4c10', [4939]]], 'nagi00_024.bin': [['1310', [4939]], ['3210', [4933]]], 'nagi00_027.bin': [['1c10', [4945]], ['1f10', [4933, 4939]]], 'nagi00_028.bin': [['1c10', [4939]], ['1f10', [4933]], ['3210', [4945]]], 'nagi00_029.bin': [['1f10', [4945]], ['2310', [4939]], ['3210', [4933]]], 'nagi00_030.bin': [['0a10', [4933, 4939, 4945]]], 'nagi00_033.bin': [['9e10', [4933]]], 'nagi00_034.bin': [['0a10', [4933, 4939]], ['1c10', [4945]], ['1f10', [4951]]], 'nagi00_035.bin': [['0a10', [4933, 4939]], ['4c10', [4945]]], 'nagi00_036.bin': [['0a10', [4945]], ['4c10', [4933, 4939]]], 'nagi00_040.bin': [['1310', [4933, 4939]], ['ea10', [4945]]], 'nagi00_041.bin': [['1310', [4933, 4939]], ['a110', [4945]]], 'nagi00_042.bin': [['1d10', [4933, 4939]], ['e910', [4945]]], 'nagi00_043.bin': [['1d10', [4933]], ['2810', [4939]], ['a110', [4951]], ['ea10', [4945]]], 'nagi00_044.bin': [['1310', [4939]], ['2210', [4933]], ['e910', [4945]]], 'nagi00_045.bin': [['5a10', [4933]]], 'nagi00_046.bin': [['2210', [4939]], ['2810', [4933]], ['ea10', [4945]]], 'nagi00_047.bin': [['0a10', [4939]], ['2810', [4933]]], 'nagi00_048.bin': [['2210', [4933, 4939]], ['a110', [4945]]], 'nagi00_049.bin': [['1d10', [4939]], ['2810', [4933]], ['e910', [4945]]], 'nagi00_052.bin': [['0a10', [4933, 4939, 4945, 4951]]], 'nagi00_053.bin': [['2210', [4933]], ['2810', [4939]], ['a110', [4945]]], 'nagi00_054.bin': [['0a10', [4945]], ['1d10', [4939]], ['2810', [4933]]], 'nagi00_055.bin': [['1310', [4933, 4939]], ['e910', [4945]]], 'nagi00_057.bin': [['9e10', [4939]], ['9f10', [4933]]], 'nagi00_080.bin': [['0710', [4939]], ['e410', [4933]], ['ea10', [4945]]], 'nagi00_081.bin': [['1310', [4933, 4939]], ['a110', [4945]]], 'nagi00_082.bin': [['1d10', [4933, 4939]], ['2210', [4945]], ['e910', [4951]]], 'nagi00_083.bin': [['1d10', [4933]], ['2810', [4939]], ['ea10', [4945]]], 'nagi00_084.bin': [['1310', [4939]], ['2210', [4933, 4945]], ['a110', [4951]]], 'nagi00_085.bin': [['5a10', [4933]], ['e910', [4939]]], 'nagi00_086.bin': [['2210', [4945]], ['2810', [4933, 4939]], ['ea10', [4951]]], 'nagi00_087.bin': [['2210', [4939]], ['2810', [4933]], ['a110', [4951]], ['e410', [4945]]], 'nagi00_088.bin': [['1d10', [4933, 4939]], ['2810', [4945]], ['e910', [4951]]], 'nagi00_089.bin': [['2210', [4939, 4945]], ['e210', [4933]], ['ea10', [4951]]], 'nagi00_092.bin': [['e110', [4933]], ['ea10', [4939]]], 'nagi00_093.bin': [['1310', [4933]], ['a110', [4945]], ['e210', [4939]]], 'nagi00_094.bin': [['1d10', [4939]], ['2210', [4933]], ['2810', [4945]], ['e910', [4951]]], 'nagi00_095.bin': [['2810', [4933]], ['e410', [4939, 4945]], ['ea10', [4951]]], 'nagi00_097.bin': [['9e10', [4939]], ['9f10', [4933]]], 'nagi00_100.bin': [['1f10', [6589, 6595]], ['bc10', [6601]]], 'nagi00_101.bin': [['3210', [6589]], ['bc10', [6595]]], 'nagi00_102.bin': [['0a10', [6589]], ['bc10', [6595]]], 'nagi00_105.bin': [['1f10', [6589, 6595]], ['bc10', [6601]]], 'nagi00_106.bin': [['3210', [6589]], ['bc10', [6595]]], 'nagi00_107.bin': [['0a10', [6589, 6595]], ['bc10', [6601]]], 'nagi00_130.bin': [['bc10', [6589]]], 'nagi00_131.bin': [['0a10', [6589, 6595]], ['bc10', [6601]]], 'nagi00_132.bin': [['4c10', [6589]], ['bc10', [6595]]], 'nagi00_133.bin': [['0a10', [6595]], ['1c10', [6589]], ['bc10', [6601]]], 'nagi00_135.bin': [['bc10', [6589]]], 'nagi00_136.bin': [['0a10', [6589, 6595, 6601]], ['bc10', [6607]]], 'nagi00_137.bin': [['4c10', [6589, 6595]], ['bc10', [6601]]], 'nagi00_138.bin': [['0a10', [6595]], ['1c10', [6589]], ['bc10', [6601]]], 'nagi00_230.bin': [['2310', [6589]], ['bc10', [6595]]], 'nagi00_231.bin': [['1c10', [6589]], ['bc10', [6595]]], 'nagi00_232.bin': [['4c10', [6589]], ['bc10', [6595]]], 'nagi00_235.bin': [['2310', [6589]], ['bc10', [6595]]], 'nagi00_236.bin': [['1c10', [6589]], ['bc10', [6595]]], 'nagi00_237.bin': [['0a10', [6595]], ['4c10', [6589]], ['bc10', [6601]]], 'nagi05_040.bin': [['4b10', [4933, 4939]], ['a110', [4945]]], 'nagi05_041.bin': [['1410', [4933]], ['4b10', [4939]], ['e910', [4945]]], 'nagi05_042.bin': [['2210', [4933, 4939, 4945]], ['ea10', [4951]]], 'nagi05_043.bin': [['2210', [4933, 4945]], ['3410', [4939]], ['a110', [4951]]], 'nagi05_044.bin': [['2610', [4939]], ['3410', [4933]], ['e910', [4945]]], 'nagi05_050.bin': [['4b10', [4933, 4939]], ['a110', [4945]]], 'nagi05_051.bin': [['1410', [4933]], ['4b10', [4939]], ['e910', [4945]]], 'nagi05_052.bin': [['2210', [4933, 4939, 4945]], ['ea10', [4951]]], 'nagi05_053.bin': [['2210', [4933, 4945]], ['3410', [4939]], ['a110', [4951]]], 'nagi05_054.bin': [['2610', [4939]], ['3410', [4933]], ['e910', [4945]]], 'nagi05_080.bin': [['4b10', [4933, 4939]], ['e910', [4945]]], 'nagi05_081.bin': [['1410', [4933]], ['4b10', [4939]], ['ea10', [4945]]], 'nagi05_082.bin': [['2210', [4933, 4939, 4945]], ['a110', [4951]]], 'nagi05_083.bin': [['2210', [4933]], ['3410', [4939, 4945]], ['e910', [4951]]], 'nagi05_084.bin': [['2610', [4939]], ['3410', [4933]], ['ea10', [4945]]], 'nagi05_090.bin': [['4b10', [4933, 4939]], ['e910', [4945]]], 'nagi05_091.bin': [['1410', [4933]], ['4b10', [4939]], ['ea10', [4945]]], 'nagi05_092.bin': [['2210', [4933, 4939, 4945]], ['a110', [4951]]], 'nagi05_093.bin': [['2210', [4933]], ['3410', [4939, 4945]], ['e910', [4951]]], 'nagi05_094.bin': [['2610', [4939]], ['3410', [4933]], ['ea10', [4945]]], 'nagi05_100.bin': [['7010', [4933, 4939]]], 'nagi05_101.bin': [['0610', [4939]], ['3010', [4933]]], 'nagi05_102.bin': [['3010', [4933, 4939]]], 'nagi05_103.bin': [['5b10', [4933]]], 'nagi05_104.bin': [['5110', [4933]]], 'nagi05_110.bin': [['7010', [4933, 4939]]], 'nagi05_111.bin': [['0610', [4939]], ['3010', [4933]]], 'nagi05_112.bin': [['3010', [4933, 4939]]], 'nagi05_113.bin': [['5b10', [4933]]], 'nagi05_114.bin': [['5110', [4933]]], 'nagi05_120.bin': [['7010', [4933, 4939, 4945]]], 'nagi05_121.bin': [['0610', [4939, 4945]], ['3010', [4933]]], 'nagi05_122.bin': [['3010', [4933, 4939]]], 'nagi05_123.bin': [['5b10', [4933]]], 'nagi05_124.bin': [['0610', [4945]], ['5110', [4933]], ['7010', [4939]]], 'nagi05_130.bin': [['7010', [4933, 4939, 4945]]], 'nagi05_131.bin': [['0610', [4939, 4945]], ['3010', [4933]]], 'nagi05_132.bin': [['3010', [4933, 4939]]], 'nagi05_133.bin': [['5b10', [4933]]], 'nagi05_134.bin': [['0610', [4945]], ['5110', [4933]], ['7010', [4939]]], 'nagi08_224.bin': [['4310', [4933, 4939, 4945]]], 'nagi08_225.bin': [['1810', [4933]], ['4d10', [4939]]], 'nagi08_226.bin': [['0410', [4933, 4939, 4945]]], 'nagi08_227.bin': [['0410', [4939]], ['1810', [4933]]], 'nagi08_228.bin': [['0410', [4939]], ['4d10', [4933]]], 'nagi08_229.bin': [['1810', [4933]]], 'nagi09_080.bin': [['dc10', [4933, 4939]]], 'nagi09_081.bin': [['9610', [4933]]], 'nagi09_082.bin': [['1510', [4933]]], 'nagi09_083.bin': [['3110', [4933]], ['3810', [4939]]], 'nagi09_084.bin': [['3110', [4933]], ['3c10', [4939]]], 'nagi09_085.bin': [['3110', [4933]], ['4310', [4939]]], 'nagi09_086.bin': [['3110', [4933]], ['9410', [4939]]], 'nagi09_087.bin': [['3110', [4933]], ['4b10', [4939]]], 'nagi09_088.bin': [['3110', [4933]], ['5910', [4939]]], 'nagi09_089.bin': [['2910', [4939]], ['3110', [4933]]], 'nagi09_229.bin': [['9a10', [4933]]], 'stbv01_226.bin': [['5e10', [4933]], ['6510', [4939, 4945]]], 'stbv01_227.bin': [['5e10', [4933]], ['6710', [4939, 4945]]], 'stbv01_228.bin': [['6710', [4933, 4939]]], 'stbv01_229.bin': [['6510', [4933, 4945]], ['6710', [4939]]], 'stbv03_040.bin': [['6110', [4933, 4939]]], 'stbv03_041.bin': [['1810', [4933, 4939, 4945]]], 'stbv03_042.bin': [['1810', [4939]], ['6110', [4933, 4945]]], 'stbv03_043.bin': [['6410', [4933]]], 'stbv03_044.bin': [['5f10', [4933]]], 'stbv03_080.bin': [['6110', [4933, 4939, 4945]]], 'stbv03_081.bin': [['1810', [4933, 4939, 4945]]], 'stbv03_082.bin': [['1810', [4939]], ['6110', [4933, 4945]]], 'stbv03_083.bin': [['6410', [4933]]], 'stbv03_084.bin': [['5f10', [4933]]], 'stbv03_223.bin': [['2e10', [4933]]], 'stbv03_224.bin': [['2f10', [4933]]], 'stbv03_225.bin': [['2e10', [4933]]], 'stbv03_226.bin': [['2e10', [4933]]], 'stbv03_227.bin': [['0711', [4933]]], 'stbv03_229.bin': [['5e10', [6205, 6211]]], 'stbv05_228.bin': [['3a10', [4933]]], 'stbv05_229.bin': [['a810', [6589]]], 'stbv06_020.bin': [['1110', [4933, 4939]], ['0011', [4930]]], 'stbv06_021.bin': [['2f10', [4933]]], 'stbv06_022.bin': [['2510', [4933]], ['5810', [4939]]], 'stbv06_023.bin': [['1110', [4939]], ['2510', [4933]]], 'stbv06_024.bin': [['6310', [4933, 4939]]], 'stbv06_040.bin': [['6110', [4933, 4939]]], 'stbv06_041.bin': [['1810', [4933, 4939, 4945]]], 'stbv06_042.bin': [['1810', [4939]], ['6110', [4933, 4945]]], 'stbv06_043.bin': [['6410', [4933]]], 'stbv06_044.bin': [['5f10', [4933]]], 'stbv06_080.bin': [['4710', [4933, 4939]]], 'stbv06_081.bin': [['6110', [4933, 4939, 4945]]], 'stbv06_082.bin': [['1810', [4933, 4939, 4945]]], 'stbv06_083.bin': [['1810', [4939]], ['6110', [4933, 4945]]], 'stbv06_084.bin': [['5f10', [4939]], ['6410', [4933]]], 'stbv06_229.bin': [['af10', [143185]]], 'stbv09_221.bin': [['7210', [29197]], ['7310', [29203]]], 'stbv09_222.bin': [['3910', [29197]]], 'stbv09_223.bin': [['7210', [29197]]], 'stbv09_224.bin': [['9810', [29197]]], 'stbv09_225.bin': [['ef10', [29197]]], 'stbv09_226.bin': [['e810', [29197]]], 'stbv09_227.bin': [['4510', [29197]]], 'stbv09_228.bin': [['dd10', [29197]]], 'stbv09_229.bin': [['2711', [143185]]], 'wegn00_080.bin': [['e510', [4933]]], 'wegn00_081.bin': [['9710', [4933]]], 'wegn00_082.bin': [['2d10', [4933]]], 'wegn00_083.bin': [['7810', [4933]]], 'wegn00_084.bin': [['3b10', [4933]]], 'wegn00_085.bin': [['3d10', [4933]]], 'wegn00_086.bin': [['0f10', [4939, 4945]], ['3d10', [4933]]], 'wegn00_087.bin': [['0f10', [4933, 4939]]], 'wegn00_088.bin': [['6210', [4933, 4939, 4945]]], 'wegn00_089.bin': [['4410', [4933, 4939]]], 'wegn00_090.bin': [['3d10', [4939]], ['4410', [4933]]], 'wegn00_091.bin': [['0f10', [4939, 4945]], ['4410', [4933]]], 'wegn00_092.bin': [['3d10', [4939]], ['6210', [4933]]], 'wegn00_093.bin': [['0f10', [4933]], ['6210', [4939, 4945]]], 'wegn00_094.bin': [['0f10', [4933]], ['3d10', [4939]], ['4410', [4945]]], 'wegn00_228.bin': [['9710', [29197]]], 'wegn00_229.bin': [['a310', [4933]]], 'wegn01_225.bin': [['0411', [147523]]], 'wegn01_226.bin': [['2311', [8347]], ['2411', [8353]], ['2511', [8359]]], 'wegn01_227.bin': [['2011', [10183]], ['2111', [10189]]], 'wegn01_228.bin': [['1c11', [6763]], ['1d11', [6769]], ['1e11', [6775]]], 'zzzz00_01.bin': [['0110', [5341]]], 'zzzz00_02.bin': [['0210', [4933]]], 'zzzz00_03.bin': [['0310', [4933]]], 'zzzz00_04.bin': [['0410', [4933]]], 'zzzz00_05.bin': [['0510', [4933]]], 'zzzz00_06.bin': [['0610', [4933]]], 'zzzz00_07.bin': [['0710', [4933]]], 'zzzz00_08.bin': [['0810', [4933]]], 'zzzz00_09.bin': [['0910', [4933]]], 'zzzz00_10.bin': [['0a10', [4933]]], 'zzzz00_11.bin': [['0b10', [4933]]], 'zzzz00_12.bin': [['0c10', [4933]]], 'zzzz00_13.bin': [['0d10', [4933]]], 'zzzz00_14.bin': [['0e10', [4933]]], 'zzzz00_15.bin': [['0f10', [4933]]], 'zzzz00_16.bin': [['1010', [4933]]], 'zzzz00_17.bin': [['1110', [4933]], ['0011', [4930]]], 'zzzz00_18.bin': [['1210', [4933]]], 'zzzz00_19.bin': [['1310', [4933]]], 'zzzz00_20.bin': [['1410', [4933]]], 'zzzz00_21.bin': [['1510', [4933]]], 'zzzz00_22.bin': [['1610', [4933]]], 'zzzz00_23.bin': [['1710', [4933]]], 'zzzz00_24.bin': [['1810', [4933]]], 'zzzz00_25.bin': [['1910', [4933]]], 'zzzz00_26.bin': [['1a10', [4933]]], 'zzzz00_27.bin': [['1b10', [4933]]], 'zzzz00_28.bin': [['1c10', [4933]]], 'zzzz00_29.bin': [['1d10', [4933]]], 'zzzz00_30.bin': [['1e10', [4933]]], 'zzzz00_31.bin': [['1f10', [4933]]], 'zzzz00_32.bin': [['2010', [4933]]], 'zzzz00_33.bin': [['2110', [4933]]], 'zzzz00_34.bin': [['2210', [4933]]], 'zzzz00_35.bin': [['2310', [4933]]], 'zzzz00_36.bin': [['2410', [4933]]], 'zzzz00_37.bin': [['2510', [4933]]], 'zzzz00_38.bin': [['2610', [4933]]], 'zzzz00_39.bin': [['2710', [4933]]], 'zzzz00_40.bin': [['2810', [4933]]], 'zzzz00_41.bin': [['2910', [4933]]], 'zzzz00_42.bin': [['2a10', [4933]]], 'zzzz00_43.bin': [['2b10', [4933]]], 'zzzz00_44.bin': [['2c10', [4933]]], 'zzzz00_45.bin': [['2d10', [4933]]], 'zzzz00_46.bin': [['2e10', [4933]]], 'zzzz00_47.bin': [['2f10', [4933]]], 'zzzz00_48.bin': [['3010', [4933]]], 'zzzz00_49.bin': [['3110', [4933]]], 'zzzz00_50.bin': [['3210', [4933]]], 'zzzz00_51.bin': [['3310', [4933]]], 'zzzz00_52.bin': [['3410', [4933]]], 'zzzz00_53.bin': [['3510', [4933]]], 'zzzz00_54.bin': [['3610', [4933]]], 'zzzz00_55.bin': [['3710', [4933]]], 'zzzz00_56.bin': [['3810', [4933]]], 'zzzz00_57.bin': [['3910', [4933]]], 'zzzz00_58.bin': [['3a10', [4933]]], 'zzzz00_59.bin': [['3b10', [4933]]], 'zzzz00_60.bin': [['3c10', [4933]]], 'zzzz00_61.bin': [['3d10', [4933]]], 'zzzz00_62.bin': [['3e10', [4933]]], 'zzzz00_63.bin': [['3f10', [4933]]], 'zzzz00_64.bin': [['4010', [4933]]], 'zzzz00_65.bin': [['4110', [4933]]], 'zzzz00_66.bin': [['4210', [4933]]], 'zzzz00_67.bin': [['4310', [4933]]], 'zzzz00_68.bin': [['4410', [4933]]], 'zzzz00_69.bin': [['4510', [4933]]], 'zzzz00_70.bin': [['4610', [4933]]], 'zzzz00_71.bin': [['4710', [4933]]], 'zzzz00_72.bin': [['4810', [4933]]], 'zzzz00_73.bin': [['4910', [4933]]], 'zzzz00_74.bin': [['4a10', [4933]]], 'zzzz00_75.bin': [['4b10', [4933]]], 'zzzz00_76.bin': [['4c10', [4933]]], 'zzzz00_77.bin': [['4d10', [4933]]], 'zzzz00_78.bin': [['4e10', [4933]]], 'zzzz00_79.bin': [['4f10', [4933]]], 'zzzz00_80.bin': [['5010', [4933]]], 'zzzz00_81.bin': [['5110', [4933]]], 'zzzz00_82.bin': [['5210', [4933]]], 'zzzz00_83.bin': [['5310', [4933]]], 'zzzz00_84.bin': [['5410', [4933]]], 'zzzz00_85.bin': [['5510', [4933]]], 'zzzz00_87.bin': [['5710', [4933]]], 'zzzz00_88.bin': [['5810', [4933]]], 'zzzz00_89.bin': [['5910', [4933]]], 'zzzz00_90.bin': [['5a10', [4933]]], 'zzzz00_91.bin': [['5b10', [4933]]], 'zzzz00_92.bin': [['5c10', [4933]]], 'zzzz00_93.bin': [['5d10', [4933]]], 'zzzz00_94.bin': [['5e10', [4933]]], 'zzzz00_95.bin': [['5f10', [4933]]], 'zzzz00_96.bin': [['6010', [4933]]], 'zzzz00_97.bin': [['6110', [4933]]], 'zzzz00_98.bin': [['6210', [4933]]], 'zzzz00_99.bin': [['6310', [4933]]], 'zzzz01_00.bin': [['6410', [4933]]], 'zzzz01_01.bin': [['6510', [4933]]], 'zzzz01_02.bin': [['6610', [4933]]], 'zzzz01_03.bin': [['6710', [4933]]], 'zzzz01_04.bin': [['6810', [4933]]], 'zzzz01_06.bin': [['6a10', [4933]]], 'zzzz01_07.bin': [['6b10', [4933]]], 'zzzz01_08.bin': [['6c10', [4933]]], 'zzzz01_09.bin': [['6d10', [4933]]], 'zzzz01_10.bin': [['6e10', [4933]]], 'zzzz01_11.bin': [['6f10', [4933]]], 'zzzz01_12.bin': [['7010', [4933]]], 'zzzz01_13.bin': [['7110', [4933]]], 'zzzz01_14.bin': [['7210', [4933]]], 'zzzz01_15.bin': [['7310', [4933]]], 'zzzz01_20.bin': [['7810', [4933]]], 'zzzz01_21.bin': [['7910', [4933]]], 'zzzz01_22.bin': [['7a10', [4933]]], 'zzzz01_23.bin': [['7b10', [4933]]], 'zzzz01_24.bin': [['7c10', [4933]]], 'zzzz01_25.bin': [['7d10', [4933]]], 'zzzz01_26.bin': [['7e10', [4933]]], 'zzzz01_27.bin': [['7f10', [4933]]], 'zzzz01_28.bin': [['8010', [4933]]], 'zzzz01_29.bin': [['8110', [143185]]], 'zzzz01_30.bin': [['8210', [143185]]], 'zzzz01_31.bin': [['8310', [143185]]], 'zzzz01_32.bin': [['8410', [4933]]], 'zzzz01_33.bin': [['8510', [4933]]], 'zzzz01_34.bin': [['8610', [4933]]], 'zzzz01_35.bin': [['8710', [4933]]], 'zzzz01_36.bin': [['8810', [4933]]], 'zzzz01_37.bin': [['8910', [4933]]], 'zzzz01_38.bin': [['8a10', [4933]]], 'zzzz01_44.bin': [['9010', [4933]]], 'zzzz01_45.bin': [['9110', [4933]]], 'zzzz01_46.bin': [['9210', [4933]]], 'zzzz01_47.bin': [['9310', [4933]]], 'zzzz01_48.bin': [['9410', [4933]]], 'zzzz01_49.bin': [['9510', [4933]]], 'zzzz01_50.bin': [['9610', [4933]]], 'zzzz01_51.bin': [['9710', [4933]]], 'zzzz01_52.bin': [['9810', [4933]]], 'zzzz01_53.bin': [['9910', [5341]]], 'zzzz01_54.bin': [['9a10', [4933]]], 'zzzz01_55.bin': [['9b10', [4933]]], 'zzzz01_56.bin': [['9c10', [4933]]], 'zzzz01_58.bin': [['9e10', [4933]]], 'zzzz01_59.bin': [['9f10', [4933]]], 'zzzz01_60.bin': [['a010', [4933]]], 'zzzz01_61.bin': [['a110', [4933]]], 'zzzz01_62.bin': [['a210', [4933]]], 'zzzz01_63.bin': [['a310', [4933]]], 'zzzz01_64.bin': [['a410', [4933]]], 'zzzz01_65.bin': [['a510', [4933]]], 'zzzz01_66.bin': [['a610', [4933]]], 'zzzz01_67.bin': [['a710', [4933]]], 'zzzz01_68.bin': [['a810', [4933]]], 'zzzz01_69.bin': [['a910', [4933]]], 'zzzz01_70.bin': [['aa10', [4933]]], 'zzzz01_71.bin': [['ab10', [4933]]], 'zzzz01_72.bin': [['ac10', [4933]]], 'zzzz01_73.bin': [['ad10', [4933]]], 'zzzz01_75.bin': [['af10', [143185]]], 'zzzz01_76.bin': [['b010', [143185]]], 'zzzz01_77.bin': [['b110', [143185]]], 'zzzz01_78.bin': [['b210', [4933]]], 'zzzz01_79.bin': [['b310', [4933]]], 'zzzz01_80.bin': [['b410', [4933]]], 'zzzz01_81.bin': [['b510', [4933]]], 'zzzz01_82.bin': [['b610', [143185]]], 'zzzz01_83.bin': [['b710', [4933]]], 'zzzz01_84.bin': [['b810', [4933]]], 'zzzz01_85.bin': [['b910', [143185]]], 'zzzz01_88.bin': [['bc10', [4933]]], 'zzzz01_89.bin': [['bd10', [4933]]], 'zzzz01_90.bin': [['be10', [4933]]], 'zzzz01_91.bin': [['bf10', [4933]]], 'zzzz01_92.bin': [['c010', [4933]]], 'zzzz01_93.bin': [['c110', [4933]]], 'zzzz02_10.bin': [['d210', [4933]]], 'zzzz02_11.bin': [['d310', [4933]]], 'zzzz02_12.bin': [['d410', [4933]]], 'zzzz02_13.bin': [['d510', [4933]]], 'zzzz02_14.bin': [['d610', [4933]]], 'zzzz02_15.bin': [['d710', [4933]]], 'zzzz02_17.bin': [['d910', [4933]]], 'zzzz02_18.bin': [['da10', [4933]]], 'zzzz02_19.bin': [['db10', [4933]]], 'zzzz02_20.bin': [['dc10', [4933]]], 'zzzz02_21.bin': [['dd10', [4933]]], 'zzzz02_22.bin': [['de10', [4933]]], 'zzzz02_23.bin': [['df10', [4933]]], 'zzzz02_24.bin': [['e010', [4933]]], 'zzzz02_25.bin': [['e110', [4933]]], 'zzzz02_26.bin': [['e210', [4933]]], 'zzzz02_27.bin': [['e310', [4933]]], 'zzzz02_28.bin': [['e410', [4933]]], 'zzzz02_29.bin': [['e510', [4933]]], 'zzzz02_30.bin': [['e610', [4933]]], 'zzzz02_31.bin': [['e710', [4933]]], 'zzzz02_32.bin': [['e810', [4933]]], 'zzzz02_33.bin': [['e910', [4933]]], 'zzzz02_34.bin': [['ea10', [4933]]], 'zzzz02_35.bin': [['eb10', [4933]]], 'zzzz02_37.bin': [['ed10', [4933]]], 'zzzz02_38.bin': [['ee10', [4933]]], 'zzzz02_39.bin': [['ef10', [4933]]], 'zzzz02_41.bin': [['f110', [143185]]], 'zzzz02_42.bin': [['f210', [143185]]], 'zzzz02_43.bin': [['f310', [143185]]], 'zzzz02_44.bin': [['f410', [143185]]], 'zzzz02_45.bin': [['f510', [143185]]], 'zzzz02_46.bin': [['f610', [143185]]], 'zzzz02_47.bin': [['f710', [143185]]], 'zzzz02_48.bin': [['f810', [143185]]], 'zzzz02_49.bin': [['f910', [143185]]], 'zzzz02_50.bin': [['fa10', [143185]]], 'zzzz02_51.bin': [['fb10', [143185]]], 'zzzz02_52.bin': [['fc10', [143185]]], 'zzzz02_53.bin': [['fd10', [143185]]], 'zzzz02_54.bin': [['fe10', [4933]]], 'zzzz02_56.bin': [['0011', [4933]]], 'zzzz02_58.bin': [['0211', [143185]]], 'zzzz02_60.bin': [['0411', [143185]]], 'zzzz02_63.bin': [['0711', [4933]]], 'zzzz02_66.bin': [['0a11', [4933]]], 'zzzz02_68.bin': [['0c11', [4933]]], 'zzzz02_69.bin': [['0d11', [4933]]], 'zzzz02_70.bin': [['0e11', [4933]]], 'zzzz02_71.bin': [['0f11', [4933]]], 'zzzz02_73.bin': [['0011', [4930]], ['1111', [4933]]], 'zzzz02_74.bin': [['1211', [4933]]], 'zzzz02_75.bin': [['1311', [4933]]], 'zzzz02_76.bin': [['1411', [4933]]], 'zzzz02_77.bin': [['1511', [4933]]], 'zzzz02_78.bin': [['1611', [4933]]], 'zzzz02_79.bin': [['1711', [143185]]], 'zzzz02_80.bin': [['1811', [4933]]], 'zzzz02_84.bin': [['1c11', [4933]]], 'zzzz02_85.bin': [['1d11', [4933]]], 'zzzz02_86.bin': [['1e11', [4933]]], 'zzzz02_88.bin': [['2011', [4933]]], 'zzzz02_89.bin': [['2111', [4933]]], 'zzzz02_91.bin': [['2311', [4933]]], 'zzzz02_92.bin': [['2411', [4933]]], 'zzzz02_93.bin': [['2511', [143185]]], 'zzzz02_94.bin': [['2611', [4933]]], 'zzzz02_95.bin': [['2711', [143185]]], 'zzzz03_02.bin': [['2e11', [143185]]], 'zzzz03_03.bin': [['2f11', [143185]]], 'zzzz03_04.bin': [['3011', [143185]]], 'zzzz03_08.bin': [['3411', [143185]]], 'zzzz03_09.bin': [['3511', [143185]]]}

steal_rates = []
item_drop_rates = []
for enemy in monster_edit.enemies:
    steal_rates.append(enemy.steal_rate)
    item_drop_rates.append(enemy.item_drop_rate)
steal_rate_avg = sum(steal_rates) / len(steal_rates)
item_drop_avg =sum(item_drop_rates) / len(item_drop_rates)
steals_unique = list(dict.fromkeys(steal_rates))
drops_unique = list(dict.fromkeys(item_drop_rates))
test

'''
HELPER FUNCTIONS
'''

def get_enemy_match(enemy_id_input: int):
    for enemy in valid_enemies:
        if enemy_id_input == enemy.enemy_id:
            test
            return enemy
    return None



'''
COMMAND FUNCTIONS
'''

def change_command_indexes(index_start: int):
    index_change = index_start
    command_count = 0
    for ind, ability in enumerate(global_abilities):
        print(ability)
        edited_chunk = ability.curr_hex_chunk
        if len(edited_chunk) < 1:
            edited_chunk = ability.og_hex_chunk
        chunk_length = len(edited_chunk)
        ability.name_start_index = ability.name_start_index + index_change
        name_diff = ability.name_new_length - ability.name_og_length
        index_change = index_change + name_diff
        ability.help_start_index = ability.help_start_index + index_change
        help_diff = ability.help_new_length - ability.help_og_length
        index_change = index_change + help_diff
        edited_chunk = convert_gamevariable_to_reversed_hex(ability.name_start_index,bytecount=2) + edited_chunk[4:8] + convert_gamevariable_to_reversed_hex(ability.help_start_index,bytecount=2) + edited_chunk[12:chunk_length]
        ability.curr_hex_chunk = edited_chunk
        if len(ability.curr_hex_chunk) != chunk_length:
            raise ValueError
        command_count = command_count + 1
    command_file_byte_dict['NUMBER_OF_ABILITIES'] = command_count

def edit_size_head(heading_chunk_inp):
    new_heading_chunk = heading_chunk_inp[0:32] + \
                        convert_gamevariable_to_reversed_hex(command_file_byte_dict['NUMBER_OF_ABILITIES'],bytecount=4) \
                        + heading_chunk_inp[40:48] \
                        + convert_gamevariable_to_reversed_hex(command_file_byte_dict['NUMBER_OF_BYTES_AFTER_HEADER'],bytecount=4) \
                        + heading_chunk_inp[56:len(heading_chunk_inp)]
    if len(new_heading_chunk) != len(heading_chunk_inp):
        raise ValueError
    else:
        heading_chunk_inp = new_heading_chunk
    return heading_chunk_inp

def odd_variable_initiate(ability_list: list[Command]):
    for ability in ability_list:
        current_chunk = ability.curr_hex_chunk
        if len(ability.curr_hex_chunk) < 32:
            current_chunk = ability.og_hex_chunk

        ability.odd_variables["sub-menu"] = current_chunk[26:28]
        ability.odd_variables["flow-system"] = current_chunk[28:32]
        ability.odd_variables["effect"] = current_chunk[16:24]
        ability.odd_variables["line1"] = current_chunk[32:40]
        ability.odd_variables["line2"] = current_chunk[40:48]
        ability.odd_variables["line3"] = current_chunk[48:56]
        ability.odd_variables["line4"] = current_chunk[56:64]
        ability.odd_variables["icon"] = current_chunk[238:240]
        ability.odd_variables["blue-magic"] = current_chunk[248:252]
        ability.odd_variables["sequence"] = current_chunk[252:254]
        ability.odd_variables["reserve?"] = current_chunk[254:262]
        ability.odd_variables["reserve2?"] = current_chunk[262:270]

def all_segments_initiate(ability_list: list[Command]):
    for ability in ability_list:
        current_chunk = ability.curr_hex_chunk
        if len(ability.curr_hex_chunk) < 32:
            current_chunk = ability.og_hex_chunk

        ability.all_hex_segments["name"] = current_chunk[0:8]
        ability.all_hex_segments["help"] = current_chunk[8:16]
        ability.all_hex_segments["effect"] = current_chunk[16:24]
        ability.all_hex_segments["start_anim"] = current_chunk[24:26]
        ability.all_hex_segments["sub-menu"] = current_chunk[26:28]
        ability.all_hex_segments["flow-system"] = current_chunk[28:32]
        ability.all_hex_segments["cursor target?"] = current_chunk[32:36]
        ability.all_hex_segments["unknown_line1"] = current_chunk[36:40]

        ability.all_hex_segments["unknown_line2"] = current_chunk[40:44]

        #Active = 00; Wait = 01
        ability.all_hex_segments["unknown_byte_1"] = current_chunk[44:46]
        ability.all_hex_segments["active/wait"] = current_chunk[46:48]
        ability.all_hex_segments["unknown_lines_3"] = current_chunk[48:68]
        ability.all_hex_segments["wait_time"] = current_chunk[68:72]
        ability.all_hex_segments["cast_time"] = current_chunk[72:76]
        ability.all_hex_segments["mp_cost"] = current_chunk[76:78]
        ability.all_hex_segments["target hp/mp"] = current_chunk[78:80]
        ability.all_hex_segments["calc ps"] = current_chunk[80:82]
        ability.all_hex_segments["crit"] = current_chunk[82:84]
        ability.all_hex_segments["hit"] = current_chunk[84:86]
        ability.all_hex_segments["power"] = current_chunk[86:88]
        ability.all_hex_segments["atk num"] = current_chunk[88:90]
        ability.all_hex_segments["atk stone"] = current_chunk[90:92]
        ability.all_hex_segments["atk element"] = current_chunk[92:94]
        ability.all_hex_segments["status1"] = current_chunk[94:94+48]
        ability.all_hex_segments["status2"] = current_chunk[94+48:94+48+48]
        ability.all_hex_segments["status3"] = current_chunk[94+48+48:94+48+48+48]
        ability.all_hex_segments["icon"] = current_chunk[len(current_chunk)-42:len(current_chunk)-40]


"""
Initiate odd variables and segment information 
"""
odd_variable_initiate(global_abilities)
all_segments_initiate(global_abilities)



test




enemy_match_directory = {}

delete_chocobos = []
for key, value in encounters_monster_ids.items():

    count = 0
    for enc in value:
        if enc[0] == "1010":
            value.pop(count)
            break
        else:
            count = count + 1

    pass

for key in delete_chocobos:
   a = encounters_monster_ids.pop(key)
   print(a)


test


leblancs = []
for enemy in monster_edit.enemies:
    if enemy.enemy_name == "Leblanc":
        e_id = convert_gamevariable_to_reversed_hex(enemy.enemy_id,bytecount=2)
        leblancs.append(e_id)
    if enemy.enemy_name == "Logos":
        e_id = convert_gamevariable_to_reversed_hex(enemy.enemy_id,bytecount=2)
        leblancs.append(e_id)
    if enemy.enemy_name == "Ormi":
        e_id = convert_gamevariable_to_reversed_hex(enemy.enemy_id,bytecount=2)
        leblancs.append(e_id)


leblancs = list(dict.fromkeys(leblancs))
valid_enemy_hex_ids = valid_enemy_hex_ids + leblancs
valid_enemy_hex_ids = list(dict.fromkeys(valid_enemy_hex_ids))


bin_enemy_index_directory = {}
these_leblancs = {}

# def bin_id_find_encounters_new():
#     for btl_bin_hex_name, btl_bin_hex in btl_bin_hexes.items():
#         for valid_id in valid_enemy_hex_ids:
#             valid_id_end_separate = " " + valid_id[0:2] + " " + valid_id[2:4] + " ff ff "
#             valid_id_find_index = btl_bin_hex.find(valid_id_end_separate)
#
#             if valid_id_find_index > 0:
#                 valid_id_new_search = btl_bin_hex[
#                                       valid_id_find_index - 42:valid_id_find_index + len(valid_id_end_separate)]
#                 id_found = []
#
#
#
#                 for jalid_id in valid_enemy_hex_ids:
#                     test
#                     jalid_id_separate = jalid_id[0:2] + " " + jalid_id[2:4] + " "
#                     m = [m.start() for m in re.finditer(jalid_id_separate, valid_id_new_search)]
#                     for jnd in range(0, len(m)):
#                         m[jnd] = m[jnd] + valid_id_find_index - 42
#                     if m:
#                         id_with_m = [jalid_id, m]
#                         id_found.append(id_with_m)
#
#                         if jalid_id in leblancs and (btl_bin_hex_name[0:3] != "99x"):
#                             these_leblancs[btl_bin_hex_name] = id_found
#
#                 bin_enemy_index_directory[btl_bin_hex_name] = id_found
#
#
# bin_id_find_encounters_new()
# print(bin_enemy_index_directory)
# test

valid_enemies2 = copy.deepcopy(valid_enemies)
valid_enemies_randomized = copy.deepcopy(valid_enemies)
random.Random(global_seed.call_seed()).shuffle(valid_enemies_randomized)



problematic_enemies = []
for index, enemy in enumerate(valid_enemies_randomized):
    if enemy.enemy_name == "Ormi":
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
    if enemy.enemy_id == 4349:  # LeBlanc problematic
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
    if enemy.enemy_name == "Chocobo":
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
    #weird cactuar
    if enemy.enemy_id == 4203:
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
    #precepts buggy
    if enemy.enemy_id == 4359:
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)

    #water flan
    if enemy.enemy_id == 1010:
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)

    #arms of azi dahaka
    if enemy.enemy_id == 4365:
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
    #vegnagun nonsense
    vegnanonsense = [4380,4381,4382,4384,4385,4387,4388,4389,]
    if enemy.enemy_id in vegnanonsense:
        valid_enemies_randomized.pop(index)
        problematic_enemies.append(enemy.enemy_id)
for index, enemy in enumerate(monster_edit.enemies):
    if enemy.enemy_name == "Ormi":
        problematic_enemies.append(enemy.enemy_id)


problematic_enemies = list(dict.fromkeys(problematic_enemies))


test








def replace_enemy_stats(enemy_giver_id_input: Enemy, enemy_receiver: Enemy):
    def get_stat_compare_ratios(receiver_stat1: int, receiver_stat2: int, giver_stat1: int, giver_stat2: int):
        # try:
        #
        # except ZeroDivisionError:
        #     combined_receiver_average = 0
        #
        # try:
        #     combined_giver_average = (giver_stat1 + giver_stat2) / 2
        # except ZeroDivisionError:
        #     combined_giver_average = 0
        combined_receiver_average = (receiver_stat1 + receiver_stat2) / 2
        combined_giver_average = (giver_stat1 + giver_stat2) / 2
        try:
            output =   combined_giver_average/ combined_receiver_average
        except ZeroDivisionError:
            test
            output = 0

        return output

    def check_stat(examined_stat):
        if examined_stat >= 255:
            examined_stat = 255
        return int(examined_stat)


    for enemy in valid_enemies2:
        if enemy_giver_id_input == enemy.enemy_id:
            old_mp = enemy_receiver.stat_bank["MP"]
            old_oversoul_mp = enemy_receiver.oversoul_stat_bank["MP"]

            v = [enemy_receiver.stat_bank["STR"],enemy_receiver.stat_bank["MAG"],enemy.stat_bank["STR"],
                 enemy.stat_bank["MAG"], enemy_receiver.stat_bank["DEF"],
                 enemy_receiver.stat_bank["MDEF"], enemy.stat_bank["DEF"], enemy.stat_bank["MDEF"]]

            o_v = [enemy_receiver.oversoul_stat_bank["STR"],enemy_receiver.oversoul_stat_bank["MAG"],enemy.oversoul_stat_bank["STR"],
                 enemy.oversoul_stat_bank["MAG"], enemy_receiver.oversoul_stat_bank["DEF"],
                 enemy_receiver.oversoul_stat_bank["MDEF"], enemy.oversoul_stat_bank["DEF"], enemy.oversoul_stat_bank["MDEF"]]

            offensive_ratio = get_stat_compare_ratios(v[0],v[1],v[2],v[3])
            defensive_ratio = get_stat_compare_ratios(v[4],v[5],v[6],v[7])
            new_str = check_stat(v[0] * offensive_ratio)
            new_mag = check_stat(v[1] * offensive_ratio)
            new_def = check_stat(v[4] * defensive_ratio)
            new_mdef = check_stat(v[5] * defensive_ratio)

            oversoul_offensive_ratio = get_stat_compare_ratios(o_v[0],o_v[1],o_v[2],o_v[3])
            oversoul_defensive_ratio = get_stat_compare_ratios(o_v[4],o_v[5],o_v[6],o_v[7])
            oversoul_new_str = check_stat(o_v[0] * oversoul_offensive_ratio)
            oversoul_new_mag = check_stat(o_v[1] * oversoul_offensive_ratio)
            oversoul_new_def = check_stat(o_v[4] * oversoul_defensive_ratio)
            oversoul_new_mdef = check_stat(o_v[5] * oversoul_defensive_ratio)

            enemy_receiver.oversoul_experience = enemy.oversoul_experience
            enemy_receiver.oversoul_stat_bank = copy.deepcopy(enemy.oversoul_stat_bank)
            enemy_receiver.oversoul_stat_bank["MP"] = old_oversoul_mp


            enemy_receiver.stat_bank = copy.deepcopy(enemy.stat_bank)
            enemy_receiver.stat_bank["MP"] = old_mp
            enemy_receiver.stat_bank["STR"] = new_str
            enemy_receiver.stat_bank["DEF"] = new_def
            enemy_receiver.stat_bank["MAG"] = new_mag
            enemy_receiver.stat_bank["MDEF"] = new_mdef

            enemy_receiver.oversoul_stat_bank["STR"] = oversoul_new_str
            enemy_receiver.oversoul_stat_bank["DEF"] = oversoul_new_def
            enemy_receiver.oversoul_stat_bank["MAG"] = oversoul_new_mag
            enemy_receiver.oversoul_stat_bank["MDEF"] = oversoul_new_mdef

            if enemy.oversoul_boolean == "0000" or enemy.oversoul_boolean == "0005":
                 enemy_receiver.oversoul_experience = enemy.experience
                 enemy_receiver.oversoul_stat_bank = copy.deepcopy(enemy_receiver.stat_bank)
                 enemy_receiver.oversoul_stat_bank["MP"] = old_mp

            enemy_receiver.experience = enemy.experience
            enemy_receiver.dropped_gil = enemy.dropped_gil
            enemy_receiver.stolen_gil = enemy.stolen_gil
            enemy_receiver.ap = enemy.ap

            test


    for enemy in monster_edit.enemies:
        if enemy_receiver.enemy_id == enemy.enemy_id:
            enemy.stat_bank = copy.deepcopy(enemy_receiver.stat_bank)
            enemy.oversoul_experience = enemy_receiver.oversoul_experience
            enemy.oversoul_stat_bank = copy.deepcopy(enemy_receiver.oversoul_stat_bank)
            # if enemy.oversoul_boolean == "0000":
            #     enemy.oversoul_experience = enemy_receiver.experience
            #     enemy.oversoul_stat_bank = enemy_receiver.stat_bank

            enemy.experience = enemy_receiver.experience
            enemy.oversoul_experience = enemy_receiver.oversoul_experience
            enemy.dropped_gil = enemy_receiver.dropped_gil
            enemy.stolen_gil = enemy_receiver.stolen_gil
            enemy.ap = enemy_receiver.ap

debug_enemies = []

#Make Luca more bearable
luca_enemies = ["4097","4098","4102","4105","4106","4112","4114","4118","4119","4124","4125","4127","4131",
                "4132","4135","4143","4146","4147","4149","4151","4159","4161","4168","4172","4174","4175",
                "4176","4181","4190","4192","4197","4198","4199","4200","4205","4219","4220","4221","4226",
                "4227","4229","4230","4231","4232","4233","4234","4240","4241","4242","4243","4244","4249",
                "4252","4260","4261","4262","4263","4264","4267","4269","4271","4274","4275","4276","4281",
                "4285","4286","4287","4288","4289","4306","4307","4308",
                "4310","4320","4324","4331","4343","4344","4345","4346","4347","4348","4350","4352","4356",
                "4404","4405","4407","4409","4411","4415","4437","4452",]

luca_bin_names = ["lchb01_229.bin","lchb02_229.bin","lchb03_228.bin","lchb03_229.bin","lchb19_229.bin"]
random.Random(global_seed.call_seed()).shuffle(luca_enemies)


for i in range(0,len(luca_bin_names)):
    luca_bin_name = luca_bin_names[i]
    luca_bin_hex = btl_bin_hexes[luca_bin_name]
    encounter_index_list = encounters_monster_ids[luca_bin_name]
    test
    for encounter_list_id in encounter_index_list:
        for og_index in encounter_list_id[1]:
            # replacement_id = encounter_list_id[0]
            if encounter_list_id[0] in enemy_match_directory.keys():
                r_id_hex = hex(enemy_match_directory[encounter_list_id[0]].enemy_id)[2:]
                replacement_id = r_id_hex[2:4] + r_id_hex[0:2]
                test
            else:
                for enemy_index, valid_enemy in enumerate(valid_enemies_randomized):
                    test
                    if str(valid_enemy.enemy_id) == str(luca_enemies[0]):
                        this_enemy = valid_enemies_randomized.pop(enemy_index)
                        luca_enemies.pop(0)
                        break

                debug_enemies.append([luca_bin_name, this_enemy])
                og_id = encounter_list_id[0]
                test
                og_id_converted = encounter_list_id[0][2:4] + encounter_list_id[0][0:2]
                og_id_converted = int(og_id_converted, 16)
                replace_enemy_stats(og_id_converted, this_enemy)
                test
                enemy_match_directory[encounter_list_id[0]] = this_enemy
                id_match = hex(this_enemy.enemy_id)[2:]
                id_match = id_match[2:4] + id_match[0:2]
                replacement_id = id_match
            hex_length_test = len(btl_bin_hexes[luca_bin_name])
            btl_bin_hexes[luca_bin_name] = btl_bin_hexes[luca_bin_name][0:og_index] \
                                              + replacement_id[0:2] + " " \
                                              + replacement_id[2:4] \
                                              + btl_bin_hexes[luca_bin_name][og_index + 5:hex_length_test]
            test
            if len(btl_bin_hexes[luca_bin_name]) != hex_length_test:
                raise ValueError
test



for btl_bin_hex_name, btl_bin_hex in btl_bin_hexes.items():
    test
    if (btl_bin_hex_name in encounters_monster_ids.keys()) and (btl_bin_hex_name not in luca_bin_names):
        for encounter_list_id in encounters_monster_ids[btl_bin_hex_name]:
            for hex_enemy_index in encounter_list_id[1]:
                replacement_id = encounter_list_id[0]
                if encounter_list_id[0] in enemy_match_directory.keys():
                    r_id_hex = hex(enemy_match_directory[encounter_list_id[0]].enemy_id)[2:]
                    replacement_id = r_id_hex[2:4] + r_id_hex[0:2]
                    test
                else:
                    this_enemy = valid_enemies_randomized.pop()
                    debug_enemies.append([btl_bin_hex_name,this_enemy])
                    og_id = encounter_list_id[0]
                    og_id_converted = encounter_list_id[0][2:4] + encounter_list_id[0][0:2]
                    og_id_converted = int(og_id_converted,16)
                    test

                    replace_enemy_stats(og_id_converted,this_enemy)
                    enemy_match_directory[encounter_list_id[0]] = this_enemy
                    id_match = hex(this_enemy.enemy_id)[2:]
                    id_match = id_match[2:4] + id_match[0:2]
                    replacement_id = id_match
                    if this_enemy.enemy_name == "Shuyin":
                        test
                hex_length_test = len(btl_bin_hexes[btl_bin_hex_name])
                btl_bin_hexes[btl_bin_hex_name] = btl_bin_hexes[btl_bin_hex_name][0:hex_enemy_index] \
                                                  + replacement_id[0:2] + " " \
                                                  + replacement_id[2:4] \
                                                  + btl_bin_hexes[btl_bin_hex_name][hex_enemy_index+5:hex_length_test]
                if len(btl_bin_hexes[btl_bin_hex_name]) != hex_length_test:
                    raise ValueError
            test

test




for btl_bin_hex_name, btl_bin_hex in btl_bin_hexes.items():
    root_directory_name = seed_name
    os_prefix = os.getcwd()
    test
    os_prefix = os_prefix + "/" + str(root_directory_name) + "/ffx_ps2/ffx2/master/jppc/battle/btl/"
    os_filename = os_prefix + btl_bin_hex_name[:-4] + "/"
    directory_path = os.path.join(os_prefix, os_filename)
    try:
        os.makedirs(directory_path)
    except FileExistsError:
        pass
    test
    filepath = pathlib.PureWindowsPath(directory_path + "/" + btl_bin_hex_name)
    binary_converted = binascii.unhexlify(btl_bin_hex.replace(" ", ""))
    with open(filepath, mode="wb") as f:
        f.write(binary_converted)
    test

def item_drop_stolen_randomize(enemy_list: list[Enemy]):
    for enemy in enemy_list:
        stolen_normal_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0,len(monster_edit.stealable_items)-1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101

        chance_1 = 78
        chance_2 = 90
        chance_3 = 95

        if chance < chance_1 :
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.stolen_item["Normal"] = [stolen_normal_item,dropped_number]

        stolen_rare_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0,len(monster_edit.stealable_items)-1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101
        if chance < chance_1 :
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.stolen_item["Rare"] = [stolen_rare_item, dropped_number]

        drop_normal_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0, len(monster_edit.stealable_items) - 1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101
        if chance < chance_1 :
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.item_drop["Normal"] = [drop_normal_item, dropped_number]

        drop_rare_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0, len(monster_edit.stealable_items) - 1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101
        if chance < chance_1:
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.item_drop["Rare"] = [drop_rare_item, dropped_number]

        bribe_normal_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0, len(monster_edit.stealable_items) - 1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101
        if chance < chance_1 :
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.bribed_item["Normal"] = [bribe_normal_item, dropped_number]

        bribe_rare_item = monster_edit.stealable_items[random.Random(global_seed.call_seed()).randint(0, len(monster_edit.stealable_items) - 1)]
        global_seed.call_seed()
        chance = global_seed.roll_100()
        dropped_number = 101
        if chance < chance_1:
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        global_seed.call_seed()
        enemy.bribed_item["Rare"] = [bribe_rare_item, dropped_number]

        enemy.item_edit_check = True

    #ITEM DROP/STEAL RATES
    for enemy in enemy_list:
        rng_roll = global_seed.roll_100()
        global_seed.call_seed()

        new_drop_rate = 32
        new_steal_rate = 32

        #Item drops
        if rng_roll < 75:
            new_drop_rate = 64
        elif rng_roll < 90:
            new_drop_rate = 128
        elif rng_roll < 95:
            new_drop_rate = 32
        else:
            new_drop_rate = 255

        rng_roll = global_seed.roll_100()
        global_seed.call_seed()

        # Steals
        if rng_roll < 45:
            new_steal_rate = 64
        elif rng_roll < 90:
            new_steal_rate = 128
        elif rng_roll < 95:
            new_steal_rate = 32
        else:
            new_steal_rate = 255

        enemy.steal_rate = new_steal_rate
        enemy.item_drop_rate = new_drop_rate


    return enemy_list

monster_edit.enemies = item_drop_stolen_randomize(monster_edit.enemies)

for count, monster in enumerate(monster_edit.enemies):
    monster.enemy_id = count + 1



monster_edit.overwrite_hex_data_str_def_exp(monster_edit.enemies)









def treasure_randomize():

    treasures = []
    unaffected_items = []
    new_treasures = []

    #adjust for key items
    for i in range(28672,28672+72):
        this_i = convert_gamevariable_to_reversed_hex(i,bytecount=2)
        test
        unaffected_items.append(this_i)

    #allitems100% chance at least once
    for i in range(1,len(monster_edit.stealable_items)):
        this_i = monster_edit.stealable_items[i]
        chance = global_seed.roll_100()
        dropped_number = 101

        chance_1 = 68
        chance_2 = 80
        chance_3 = 90

        if chance < chance_1:
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        new_treasures.append([this_i,dropped_number])

    num_count = 0
    treasure_heading_chunk = treasure_bin_hex[0:64]
    treasure_details_chunk = treasure_bin_hex[64:]
    for i in range (0,1279):
        this_type_index = num_count
        this_treasure_type = treasure_details_chunk[this_type_index:this_type_index+2]
        this_treasure_num = treasure_details_chunk[this_type_index+2:this_type_index + 4]
        this_treasure_id = treasure_details_chunk[this_type_index+4:this_type_index+8]
        this_treasure = Treasure(this_treasure_id,this_treasure_num,this_type_index,this_treasure_type)
        treasures.append(this_treasure)
        num_count = num_count + 8

    for treasure in treasures:
        if treasure.treasure_type != "00":
            unaffected_items.append(treasure.treasure_id)


    treasure_pool = copy.deepcopy(monster_edit.stealable_items)

    #make sure any treasures you want mandatory (except key items) are already added to new_treasures before this point
    unaffected_items = list(dict.fromkeys(unaffected_items))
    range_of_treasures = len(treasures) - len(unaffected_items) - len(new_treasures)

    for i in range(0,range_of_treasures):
        randomized_item_index = random.Random(global_seed.call_seed()).randint(0,len(treasure_pool)-1)
        new_treasure = treasure_pool[randomized_item_index]

        chance = global_seed.roll_100()
        dropped_number = 101

        chance_1 = 68
        chance_2 = 80
        chance_3 = 90

        if chance < chance_1:
            dropped_number = 1
        elif chance < chance_2:
            dropped_number = 2
        elif chance < chance_3:
            dropped_number = 3
        else:
            dropped_number = 4
        new_treasures.append([new_treasure, dropped_number])
    test

    random.Random(global_seed.call_seed()).shuffle(new_treasures)


    treasure_count = 0
    for index, treasure in enumerate(treasures):
        if treasure.treasure_id in unaffected_items:
            pass
        else:
            treasure.treasure_id = new_treasures[treasure_count][0]
            treasure.treasure_num = convert_gamevariable_to_reversed_hex(new_treasures[treasure_count][1],bytecount=1)
            treasure.treasure_type = "00"
            treasure_count = treasure_count + 1


    #change details chunk with changes
    treasure_details_chunk = ""
    for treasure in treasures:
        treasure_details_chunk = treasure_details_chunk + treasure.treasure_type + treasure.treasure_num + treasure.treasure_id
    output_hex = treasure_heading_chunk + treasure_details_chunk
    if len(output_hex) != len(treasure_bin_hex):
        raise ValueError

    return output_hex

treasure_randomized_hex = treasure_randomize()

def output_treasure_bin():
    root_directory_name = seed_name
    os_prefix = os.getcwd()
    os_prefix = os_prefix + "/" + str(root_directory_name) + "/ffx_ps2/ffx2/master/jppc/battle/kernel"
    try:
        os.makedirs(os_prefix)
    except FileExistsError:
        pass
    filepath = pathlib.PureWindowsPath(os_prefix + "/takara.bin")
    test
    binary_converted = binascii.unhexlify(treasure_randomized_hex)
    with open(filepath, mode="wb") as f:
        f.write(binary_converted)
    test


sorted_dict = {key: value for key, value in sorted(enemy_match_directory.items())}
test

testyy2 = enemy_match_directory["1811"]
output_treasure_bin()
test

for enemy in monster_edit.enemies:
    print(str(enemy) + " ... " +  str(enemy.oversoul_boolean))



test
monster_edit.write_bins_new(reset_bins=False)